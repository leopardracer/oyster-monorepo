{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xa9472a9C135Cb33221de441a4DEd393FD515a69C",
      "txHash": "0xa36570bdbb1227e3048de714dd4a5bd7f50d1e237f50e9bd36c83dde52adc9e8",
      "kind": "uups"
    },
    {
      "address": "0x29cbA3c69CB4Cf89a4e8b5f698df7C607A488e4f",
      "txHash": "0x05de1b58db54fb9334254ddaf6597371ea511085359aefb267e8f738d5df776a",
      "kind": "uups"
    },
    {
      "address": "0x0B3d9b224496C2A2Fa1a4096D8EB4D350eFd9079",
      "txHash": "0x1713d0dab74d185abe820065a0250dc3cf49337fbd4a15553632f6c5fd4b1305",
      "kind": "uups"
    },
    {
      "address": "0xCb106cAB93E3774Ed4bdcd5AD564077Ad8FA835f",
      "txHash": "0x315a768a0af0c3d4f3ce38fbb7fa5809101ce82696fc9a1c298e1d4caa8c847a",
      "kind": "uups"
    },
    {
      "address": "0x38cF9E385aC857D641b6AAF73591fb4A75608CA8",
      "txHash": "0xe2574451276eebf30ba0b685335aee7796f6982a15688676be5884c364cbde7d",
      "kind": "uups"
    },
    {
      "address": "0x777c32858660B3B38D54216c43589A74a4896220",
      "txHash": "0x5ede3ba3172a8f82a75bd0c0200686306600b2506cdd1acc646af492050a15f6",
      "kind": "uups"
    },
    {
      "address": "0xeC2Db76B4A331219F40b409DA3BB426aE0d955aD",
      "txHash": "0x2e3a80a9e14f9bdc7a06ab9f8f20f7174910f22f560ff1ec216caae4bd397e9c",
      "kind": "uups"
    },
    {
      "address": "0xfeEa9a34e51e4E90b8B62F38120A345650164110",
      "txHash": "0xde2c3871c13171e37eda687a69a55c7e5b3f608bd77ac5f92254c8c70b5a6e55",
      "kind": "uups"
    },
    {
      "address": "0xef0B03930C88B932F64b77922C808Cc51F39e99a",
      "txHash": "0x99c015838f1df2650c5847faf6836708ebdce8d502b1cfc34e276ba7acf76866",
      "kind": "uups"
    },
    {
      "address": "0x3FA4718a2fd55297CD866E5a0dE6Bc75E2b777d1",
      "txHash": "0xd9c53914ff17de1ea3fd9658a9630df8fed9eb46a71ec2825439d673ab957131",
      "kind": "uups"
    },
    {
      "address": "0xDcD2846DCA523Db1C8F3c842a41A58099dE26A0A",
      "txHash": "0x0eee35fbf5a1106a022b3ec0ef0e9f5320be6d06dde2825582dab62385b09f4d",
      "kind": "uups"
    },
    {
      "address": "0xe43EFeA7f40a885f4B35a149CAB5FC3fE01564C6",
      "txHash": "0x554f93eb567de6aa2470d8a8fa43fd9257554e602ad82445becc63825af3062e",
      "kind": "uups"
    },
    {
      "address": "0x5E478CB7576906fe2a443684aDcD9A0dfc547abD",
      "txHash": "0xd8a4e2601605ae7eeee46ae25e98197702191db4112681de074f57ccfc637b32",
      "kind": "uups"
    },
    {
      "address": "0x3867A88adcab3470c3c787216Eb5cc4F32230874",
      "txHash": "0xdb37f28d0206237c31d063d77319f0087c43e7b59a18d883f4031f696bca4468",
      "kind": "uups"
    },
    {
      "address": "0xE554d2Be7E093FBca1FC1D78dbEa7eF145185E85",
      "txHash": "0x51ca592f000974aaef28992f8eac67b6989145b7e2d51265becbff069fceddd9",
      "kind": "uups"
    },
    {
      "address": "0xF4F4CDBdb0109d1B42B06B36eb0b7d27576f3446",
      "txHash": "0x5995132974efd4ffc503a21c48d6b0e3d5925d683163b2151243a526048bf8b6",
      "kind": "uups"
    }
  ],
  "impls": {
    "c9a4474bd3e8c57db1a268a6654b7770cb72332fd7532c47eeb83c9ffd001011": {
      "address": "0xC5e7523B3C49403daf5008c4ac050B48ABF91Adc",
      "txHash": "0xed7fd2d0f843a0a9cc59a56e71405788a2bdb9731e5a1e52a22a2b37a5becbe5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:13"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:43"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Pond",
            "label": "__gap0",
            "type": "t_array(t_uint256)500_storage",
            "src": "contracts/Pond.sol:30"
          },
          {
            "contract": "Pond",
            "label": "l1Address",
            "type": "t_address",
            "src": "contracts/Pond.sol:85"
          },
          {
            "contract": "Pond",
            "label": "__gap1",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/Pond.sol:86"
          }
        ],
        "types": {
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)3181_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2880_storage"
              }
            ]
          },
          "t_struct(Set)2880_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ebe0524cb7326c59024a5a9dbfe0dadbde61673674f89516b59e49328542f904": {
      "address": "0x8253C15e7d213DA7307482c19c4BdA1C12fC7b54",
      "txHash": "0x98564e55b3374030e4bf08b57f246b71bea3d22ed28fbd01f6a6200de1f1ee78",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "LockUpgradeable",
            "label": "locks",
            "type": "t_mapping(t_bytes32,t_struct(Lock)10172_storage)",
            "src": "contracts/lock/LockUpgradeable.sol:19"
          },
          {
            "contract": "LockUpgradeable",
            "label": "lockWaitTime",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/lock/LockUpgradeable.sol:20"
          },
          {
            "contract": "MarketV1",
            "label": "__gap0",
            "type": "t_array(t_uint256)500_storage",
            "src": "contracts/enclaves/MarketV1.sol:27"
          },
          {
            "contract": "MarketV1",
            "label": "__gap1",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/enclaves/MarketV1.sol:62"
          },
          {
            "contract": "MarketV1",
            "label": "providers",
            "type": "t_mapping(t_address,t_struct(Provider)9448_storage)",
            "src": "contracts/enclaves/MarketV1.sol:97"
          },
          {
            "contract": "MarketV1",
            "label": "__gap2",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/enclaves/MarketV1.sol:99"
          },
          {
            "contract": "MarketV1",
            "label": "jobs",
            "type": "t_mapping(t_bytes32,t_struct(Job)9580_storage)",
            "src": "contracts/enclaves/MarketV1.sol:150"
          },
          {
            "contract": "MarketV1",
            "label": "jobIndex",
            "type": "t_uint256",
            "src": "contracts/enclaves/MarketV1.sol:151"
          },
          {
            "contract": "MarketV1",
            "label": "token",
            "type": "t_contract(IERC20)3546",
            "src": "contracts/enclaves/MarketV1.sol:153"
          },
          {
            "contract": "MarketV1",
            "label": "__gap3",
            "type": "t_array(t_uint256)47_storage",
            "src": "contracts/enclaves/MarketV1.sol:155"
          }
        ],
        "types": {
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_struct(Provider)9448_storage)": {
            "label": "mapping(address => struct MarketV1.Provider)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Provider)9448_storage": {
            "label": "struct MarketV1.Provider",
            "members": [
              {
                "label": "cp",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(Job)9580_storage)": {
            "label": "mapping(bytes32 => struct MarketV1.Job)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Job)9580_storage": {
            "label": "struct MarketV1.Job",
            "members": [
              {
                "label": "metadata",
                "type": "t_string_storage"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "provider",
                "type": "t_address"
              },
              {
                "label": "rate",
                "type": "t_uint256"
              },
              {
                "label": "balance",
                "type": "t_uint256"
              },
              {
                "label": "lastSettled",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IERC20)3546": {
            "label": "contract IERC20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_mapping(t_bytes32,t_struct(Lock)10172_storage)": {
            "label": "mapping(bytes32 => struct LockUpgradeable.Lock)"
          },
          "t_struct(Lock)10172_storage": {
            "label": "struct LockUpgradeable.Lock",
            "members": [
              {
                "label": "unlockTime",
                "type": "t_uint256"
              },
              {
                "label": "iValue",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_struct(AddressSet)3181_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2880_storage"
              }
            ]
          },
          "t_struct(Set)2880_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "428f0950908cdb520923b0f4508810651a44a3ced03f663a264fb7072bc225c6": {
      "address": "0x31a83CA0c80b014279894CA476B043f3FDdaadd4",
      "txHash": "0xf7c8c550679a8cd4edf87fa893690dfff4842aacf11dc2589e3b949ff699f20f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "MPond",
            "label": "__gap0",
            "type": "t_array(t_uint256)500_storage",
            "src": "contracts/MPond.sol:37"
          },
          {
            "contract": "MPond",
            "label": "__gap1",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/MPond.sol:69"
          },
          {
            "contract": "MPond",
            "label": "__gap2",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/MPond.sol:93"
          },
          {
            "contract": "MPond",
            "label": "allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint96))",
            "src": "contracts/MPond.sol:129"
          },
          {
            "contract": "MPond",
            "label": "balances",
            "type": "t_mapping(t_address,t_struct(Balance)5923_storage)",
            "src": "contracts/MPond.sol:139"
          },
          {
            "contract": "MPond",
            "label": "__gap3",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/MPond.sol:141"
          },
          {
            "contract": "MPond",
            "label": "delegates",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint96))",
            "src": "contracts/MPond.sol:354"
          },
          {
            "contract": "MPond",
            "label": "nonces",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/MPond.sol:357"
          },
          {
            "contract": "MPond",
            "label": "__gap4",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/MPond.sol:359"
          },
          {
            "contract": "MPond",
            "label": "checkpoints",
            "type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)6887_storage))",
            "src": "contracts/MPond.sol:556"
          },
          {
            "contract": "MPond",
            "label": "numCheckpoints",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "contracts/MPond.sol:559"
          },
          {
            "contract": "MPond",
            "label": "__gap5",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/MPond.sol:561"
          },
          {
            "contract": "MPond",
            "label": "__gap6",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/MPond.sol:690"
          },
          {
            "contract": "MPond",
            "label": "l1Address",
            "type": "t_address",
            "src": "contracts/MPond.sol:738"
          },
          {
            "contract": "MPond",
            "label": "__gap7",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/MPond.sol:739"
          }
        ],
        "types": {
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint96))": {
            "label": "mapping(address => mapping(address => uint96))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint96)": {
            "label": "mapping(address => uint96)"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_address,t_struct(Balance)5923_storage)": {
            "label": "mapping(address => struct MPond.Balance)"
          },
          "t_struct(Balance)5923_storage": {
            "label": "struct MPond.Balance",
            "members": [
              {
                "label": "undelegated",
                "type": "t_uint96"
              },
              {
                "label": "token",
                "type": "t_uint96"
              },
              {
                "label": "__unused",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)6887_storage))": {
            "label": "mapping(address => mapping(uint32 => struct MPond.Checkpoint))"
          },
          "t_mapping(t_uint32,t_struct(Checkpoint)6887_storage)": {
            "label": "mapping(uint32 => struct MPond.Checkpoint)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_struct(Checkpoint)6887_storage": {
            "label": "struct MPond.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32"
              },
              {
                "label": "votes",
                "type": "t_uint96"
              }
            ]
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)3181_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2880_storage"
              }
            ]
          },
          "t_struct(Set)2880_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "8137288b7dd833b49699769c3e90cb3770c4ad4bab315ff9ea3268dbdeea93b5": {
      "address": "0x3dc53393F069e1db4aa08827BD9fe6adeA3B4c1C",
      "txHash": "0x61bd0356170d39b12bd9001215683cc6670032f0fe67e92906ca4b8563fb8762",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "ClusterRegistry",
            "label": "__gap0",
            "type": "t_array(t_uint256)500_storage",
            "src": "contracts/staking/ClusterRegistry.sol:22"
          },
          {
            "contract": "ClusterRegistry",
            "label": "__gap1",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/staking/ClusterRegistry.sol:57"
          },
          {
            "contract": "ClusterRegistry",
            "label": "locks",
            "type": "t_mapping(t_bytes32,t_struct(Lock)10743_storage)",
            "src": "contracts/staking/ClusterRegistry.sol:87"
          },
          {
            "contract": "ClusterRegistry",
            "label": "lockWaitTime",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/staking/ClusterRegistry.sol:88"
          },
          {
            "contract": "ClusterRegistry",
            "label": "clusters",
            "type": "t_mapping(t_address,t_struct(Cluster)10814_storage)",
            "src": "contracts/staking/ClusterRegistry.sol:113"
          },
          {
            "contract": "ClusterRegistry",
            "label": "clientKeys",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/staking/ClusterRegistry.sol:114"
          }
        ],
        "types": {
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(Lock)10743_storage)": {
            "label": "mapping(bytes32 => struct ClusterRegistry.Lock)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Lock)10743_storage": {
            "label": "struct ClusterRegistry.Lock",
            "members": [
              {
                "label": "unlockBlock",
                "type": "t_uint256"
              },
              {
                "label": "iValue",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_struct(Cluster)10814_storage)": {
            "label": "mapping(address => struct ClusterRegistry.Cluster)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Cluster)10814_storage": {
            "label": "struct ClusterRegistry.Cluster",
            "members": [
              {
                "label": "networkId",
                "type": "t_bytes32"
              },
              {
                "label": "commission",
                "type": "t_uint256"
              },
              {
                "label": "rewardAddress",
                "type": "t_address"
              },
              {
                "label": "clientKey",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(Status)10802"
              }
            ]
          },
          "t_enum(Status)10802": {
            "label": "enum ClusterRegistry.Status",
            "members": [
              "NOT_REGISTERED",
              "REGISTERED"
            ]
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_struct(AddressSet)3181_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2880_storage"
              }
            ]
          },
          "t_struct(Set)2880_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "508c879c522af221bbab0df5aaeaf944f7f936bdd51dc04f1d60f6d0e5ed0712": {
      "address": "0x09CecBCe291dcFa45A7F9AABd5375e61f468032f",
      "txHash": "0x20dc902a66362c28e0e5d7b4e9f869371d80cf0502ef491d7b72c0357d3c1a3c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "RewardDelegators",
            "label": "__gap0",
            "type": "t_array(t_uint256)500_storage",
            "src": "contracts/staking/RewardDelegators.sol:26"
          },
          {
            "contract": "RewardDelegators",
            "label": "__gap1",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/staking/RewardDelegators.sol:61"
          },
          {
            "contract": "RewardDelegators",
            "label": "clusters",
            "type": "t_mapping(t_address,t_struct(Cluster)13133_storage)",
            "src": "contracts/staking/RewardDelegators.sol:118"
          },
          {
            "contract": "RewardDelegators",
            "label": "stakeAddress",
            "type": "t_address",
            "src": "contracts/staking/RewardDelegators.sol:120"
          },
          {
            "contract": "RewardDelegators",
            "label": "rewardFactor",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/staking/RewardDelegators.sol:121"
          },
          {
            "contract": "RewardDelegators",
            "label": "tokenIndex",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/staking/RewardDelegators.sol:122"
          },
          {
            "contract": "RewardDelegators",
            "label": "tokenList",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts/staking/RewardDelegators.sol:123"
          },
          {
            "contract": "RewardDelegators",
            "label": "clusterRewards",
            "type": "t_contract(IClusterRewards)12696",
            "src": "contracts/staking/RewardDelegators.sol:124"
          },
          {
            "contract": "RewardDelegators",
            "label": "clusterRegistry",
            "type": "t_contract(IClusterRegistry)12583",
            "src": "contracts/staking/RewardDelegators.sol:125"
          },
          {
            "contract": "RewardDelegators",
            "label": "PONDToken",
            "type": "t_contract(IERC20Upgradeable)1834",
            "src": "contracts/staking/RewardDelegators.sol:126"
          }
        ],
        "types": {
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_struct(Cluster)13133_storage)": {
            "label": "mapping(address => struct RewardDelegators.Cluster)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Cluster)13133_storage": {
            "label": "struct RewardDelegators.Cluster",
            "members": [
              {
                "label": "totalDelegations",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "delegators",
                "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))"
              },
              {
                "label": "rewardDebt",
                "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))"
              },
              {
                "label": "accRewardPerShare",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_contract(IClusterRewards)12696": {
            "label": "contract IClusterRewards"
          },
          "t_contract(IClusterRegistry)12583": {
            "label": "contract IClusterRegistry"
          },
          "t_contract(IERC20Upgradeable)1834": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_struct(AddressSet)3181_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2880_storage"
              }
            ]
          },
          "t_struct(Set)2880_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f1d4a56a049d3080b15649e0b103a318875ee7c41db501a895bd5418b902b406": {
      "address": "0xc22f4275cfB799b6119e913f14557C266834E909",
      "txHash": "0xb5f94a0240904b67ccac4c6117a65aaf3af079f890f22b73cfc241d550d02ea6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "StakeManager",
            "label": "__gap0",
            "type": "t_array(t_uint256)500_storage",
            "src": "contracts/staking/StakeManager.sol:26"
          },
          {
            "contract": "StakeManager",
            "label": "__gap1",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/staking/StakeManager.sol:61"
          },
          {
            "contract": "StakeManager",
            "label": "locks",
            "type": "t_mapping(t_bytes32,t_struct(Lock)14452_storage)",
            "src": "contracts/staking/StakeManager.sol:108"
          },
          {
            "contract": "StakeManager",
            "label": "lockWaitTime",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/staking/StakeManager.sol:109"
          },
          {
            "contract": "StakeManager",
            "label": "__gap2",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/staking/StakeManager.sol:111"
          },
          {
            "contract": "StakeManager",
            "label": "tokens",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/staking/StakeManager.sol:193"
          },
          {
            "contract": "StakeManager",
            "label": "tokenList",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts/staking/StakeManager.sol:194"
          },
          {
            "contract": "StakeManager",
            "label": "tokenIndex",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/staking/StakeManager.sol:195"
          },
          {
            "contract": "StakeManager",
            "label": "__gap3",
            "type": "t_array(t_uint256)47_storage",
            "src": "contracts/staking/StakeManager.sol:197"
          },
          {
            "contract": "StakeManager",
            "label": "stashes",
            "type": "t_mapping(t_bytes32,t_struct(Stash)15139_storage)",
            "src": "contracts/staking/StakeManager.sol:306"
          },
          {
            "contract": "StakeManager",
            "label": "stashIndex",
            "type": "t_uint256",
            "src": "contracts/staking/StakeManager.sol:308"
          },
          {
            "contract": "StakeManager",
            "label": "rewardDelegators",
            "type": "t_contract(IRewardDelegators)12850",
            "src": "contracts/staking/StakeManager.sol:310"
          },
          {
            "contract": "StakeManager",
            "label": "__gap4",
            "type": "t_array(t_uint256)47_storage",
            "src": "contracts/staking/StakeManager.sol:312"
          },
          {
            "contract": "StakeManager",
            "label": "__gap5",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/staking/StakeManager.sol:432"
          },
          {
            "contract": "StakeManager",
            "label": "__gap6",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/staking/StakeManager.sol:676"
          }
        ],
        "types": {
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(Lock)14452_storage)": {
            "label": "mapping(bytes32 => struct StakeManager.Lock)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Lock)14452_storage": {
            "label": "struct StakeManager.Lock",
            "members": [
              {
                "label": "unlockTime",
                "type": "t_uint256"
              },
              {
                "label": "iValue",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_mapping(t_bytes32,t_struct(Stash)15139_storage)": {
            "label": "mapping(bytes32 => struct StakeManager.Stash)"
          },
          "t_struct(Stash)15139_storage": {
            "label": "struct StakeManager.Stash",
            "members": [
              {
                "label": "staker",
                "type": "t_address"
              },
              {
                "label": "delegatedCluster",
                "type": "t_address"
              },
              {
                "label": "amounts",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "__unused_govDelegations",
                "type": "t_mapping(t_bytes32,t_address)"
              }
            ]
          },
          "t_contract(IRewardDelegators)12850": {
            "label": "contract IRewardDelegators"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_struct(AddressSet)3181_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2880_storage"
              }
            ]
          },
          "t_struct(Set)2880_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a507258056d3cbf4821f94b3b57068d06b6ed115e287ba795ba9e70c0e221583": {
      "address": "0xb257cd6fe9E7bb3c6a660217Ac672D54A24616E5",
      "txHash": "0x6b22fea26cfcf12b37dbada4d6c36740a86caf0006635d29483adc0b9590b3de",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "ClusterRewards",
            "label": "__gap0",
            "type": "t_array(t_uint256)500_storage",
            "src": "contracts/staking/ClusterRewards.sol:23"
          },
          {
            "contract": "ClusterRewards",
            "label": "__gap1",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/staking/ClusterRewards.sol:58"
          },
          {
            "contract": "ClusterRewards",
            "label": "clusterRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/staking/ClusterRewards.sol:102"
          },
          {
            "contract": "ClusterRewards",
            "label": "rewardWeight",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/staking/ClusterRewards.sol:104"
          },
          {
            "contract": "ClusterRewards",
            "label": "totalWeight",
            "type": "t_uint256",
            "src": "contracts/staking/ClusterRewards.sol:105"
          },
          {
            "contract": "ClusterRewards",
            "label": "totalRewardsPerEpoch",
            "type": "t_uint256",
            "src": "contracts/staking/ClusterRewards.sol:106"
          },
          {
            "contract": "ClusterRewards",
            "label": "payoutDenomination",
            "type": "t_uint256",
            "src": "contracts/staking/ClusterRewards.sol:107"
          },
          {
            "contract": "ClusterRewards",
            "label": "rewardDistributedPerEpoch",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/staking/ClusterRewards.sol:109"
          },
          {
            "contract": "ClusterRewards",
            "label": "latestNewEpochRewardAt",
            "type": "t_uint256",
            "src": "contracts/staking/ClusterRewards.sol:110"
          },
          {
            "contract": "ClusterRewards",
            "label": "rewardDistributionWaitTime",
            "type": "t_uint256",
            "src": "contracts/staking/ClusterRewards.sol:111"
          }
        ],
        "types": {
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_struct(AddressSet)3181_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2880_storage"
              }
            ]
          },
          "t_struct(Set)2880_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ff97f74dcaea513498d02dcba99f1479293fbe0ba7bb52845cfe77d658e76bb3": {
      "address": "0x9cB8964130BA745f8d2453cfdE8fEF7935ea10BF",
      "txHash": "0x915bab7cfd37a412db61f1e9ed496163fcfb4ecb8ac3b9b95856ff689174d161",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "LockUpgradeable",
            "label": "locks",
            "type": "t_mapping(t_bytes32,t_struct(Lock)10173_storage)",
            "src": "contracts/lock/LockUpgradeable.sol:19"
          },
          {
            "contract": "LockUpgradeable",
            "label": "lockWaitTime",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/lock/LockUpgradeable.sol:20"
          },
          {
            "contract": "MarketV1",
            "label": "__gap0",
            "type": "t_array(t_uint256)500_storage",
            "src": "contracts/enclaves/MarketV1.sol:27"
          },
          {
            "contract": "MarketV1",
            "label": "__gap1",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/enclaves/MarketV1.sol:62"
          },
          {
            "contract": "MarketV1",
            "label": "providers",
            "type": "t_mapping(t_address,t_struct(Provider)9448_storage)",
            "src": "contracts/enclaves/MarketV1.sol:97"
          },
          {
            "contract": "MarketV1",
            "label": "__gap2",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/enclaves/MarketV1.sol:99"
          },
          {
            "contract": "MarketV1",
            "label": "jobs",
            "type": "t_mapping(t_bytes32,t_struct(Job)9580_storage)",
            "src": "contracts/enclaves/MarketV1.sol:150"
          },
          {
            "contract": "MarketV1",
            "label": "jobIndex",
            "type": "t_uint256",
            "src": "contracts/enclaves/MarketV1.sol:151"
          },
          {
            "contract": "MarketV1",
            "label": "token",
            "type": "t_contract(IERC20)3546",
            "src": "contracts/enclaves/MarketV1.sol:153"
          },
          {
            "contract": "MarketV1",
            "label": "__gap3",
            "type": "t_array(t_uint256)47_storage",
            "src": "contracts/enclaves/MarketV1.sol:155"
          }
        ],
        "types": {
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_struct(Provider)9448_storage)": {
            "label": "mapping(address => struct MarketV1.Provider)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Provider)9448_storage": {
            "label": "struct MarketV1.Provider",
            "members": [
              {
                "label": "cp",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(Job)9580_storage)": {
            "label": "mapping(bytes32 => struct MarketV1.Job)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Job)9580_storage": {
            "label": "struct MarketV1.Job",
            "members": [
              {
                "label": "metadata",
                "type": "t_string_storage"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "provider",
                "type": "t_address"
              },
              {
                "label": "rate",
                "type": "t_uint256"
              },
              {
                "label": "balance",
                "type": "t_uint256"
              },
              {
                "label": "lastSettled",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IERC20)3546": {
            "label": "contract IERC20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_mapping(t_bytes32,t_struct(Lock)10173_storage)": {
            "label": "mapping(bytes32 => struct LockUpgradeable.Lock)"
          },
          "t_struct(Lock)10173_storage": {
            "label": "struct LockUpgradeable.Lock",
            "members": [
              {
                "label": "unlockTime",
                "type": "t_uint256"
              },
              {
                "label": "iValue",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_struct(AddressSet)3181_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2880_storage"
              }
            ]
          },
          "t_struct(Set)2880_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "80397d1380eb6401df8fcfd35379a69ac55ce974e9006c0d8a26151daba52ae1": {
      "address": "0x09c7369e72726dBE24C34e1822D38cC919b793DC",
      "txHash": "0x2c2b5b0bbd52554a1a693f90be686ff392b1cd2189ffce9b16c8625dbee397a1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "LockUpgradeable",
            "label": "locks",
            "type": "t_mapping(t_bytes32,t_struct(Lock)10177_storage)",
            "src": "contracts/lock/LockUpgradeable.sol:19"
          },
          {
            "contract": "LockUpgradeable",
            "label": "lockWaitTime",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/lock/LockUpgradeable.sol:20"
          },
          {
            "contract": "MarketV1",
            "label": "__gap0",
            "type": "t_array(t_uint256)500_storage",
            "src": "contracts/enclaves/MarketV1.sol:27"
          },
          {
            "contract": "MarketV1",
            "label": "__gap1",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/enclaves/MarketV1.sol:62"
          },
          {
            "contract": "MarketV1",
            "label": "providers",
            "type": "t_mapping(t_address,t_struct(Provider)9448_storage)",
            "src": "contracts/enclaves/MarketV1.sol:97"
          },
          {
            "contract": "MarketV1",
            "label": "__gap2",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/enclaves/MarketV1.sol:99"
          },
          {
            "contract": "MarketV1",
            "label": "jobs",
            "type": "t_mapping(t_bytes32,t_struct(Job)9580_storage)",
            "src": "contracts/enclaves/MarketV1.sol:150"
          },
          {
            "contract": "MarketV1",
            "label": "jobIndex",
            "type": "t_uint256",
            "src": "contracts/enclaves/MarketV1.sol:151"
          },
          {
            "contract": "MarketV1",
            "label": "token",
            "type": "t_contract(IERC20)3546",
            "src": "contracts/enclaves/MarketV1.sol:153"
          },
          {
            "contract": "MarketV1",
            "label": "__gap3",
            "type": "t_array(t_uint256)47_storage",
            "src": "contracts/enclaves/MarketV1.sol:155"
          }
        ],
        "types": {
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_struct(Provider)9448_storage)": {
            "label": "mapping(address => struct MarketV1.Provider)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Provider)9448_storage": {
            "label": "struct MarketV1.Provider",
            "members": [
              {
                "label": "cp",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(Job)9580_storage)": {
            "label": "mapping(bytes32 => struct MarketV1.Job)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Job)9580_storage": {
            "label": "struct MarketV1.Job",
            "members": [
              {
                "label": "metadata",
                "type": "t_string_storage"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "provider",
                "type": "t_address"
              },
              {
                "label": "rate",
                "type": "t_uint256"
              },
              {
                "label": "balance",
                "type": "t_uint256"
              },
              {
                "label": "lastSettled",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IERC20)3546": {
            "label": "contract IERC20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_mapping(t_bytes32,t_struct(Lock)10177_storage)": {
            "label": "mapping(bytes32 => struct LockUpgradeable.Lock)"
          },
          "t_struct(Lock)10177_storage": {
            "label": "struct LockUpgradeable.Lock",
            "members": [
              {
                "label": "unlockTime",
                "type": "t_uint256"
              },
              {
                "label": "iValue",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_struct(AddressSet)3181_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2880_storage"
              }
            ]
          },
          "t_struct(Set)2880_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "648c286435173a8fba9897eef9b10bd8bc4b97375b0d2ad5b2deab64770389ce": {
      "address": "0x464d85D3a29A52F15886376823D56aB5D37619AB",
      "txHash": "0x67d5446ed714ed436451f949c032f81811dd2ffb7e74691b0193cc66bd2532a5",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "label": "__gap0",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)500_storage",
            "contract": "Bridge",
            "src": "contracts/Bridge.sol:23"
          },
          {
            "label": "__gap1",
            "offset": 0,
            "slot": "801",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Bridge",
            "src": "contracts/Bridge.sol:62"
          },
          {
            "label": "liquidityBp",
            "offset": 0,
            "slot": "851",
            "type": "t_uint256",
            "contract": "Bridge",
            "src": "contracts/Bridge.sol:89"
          },
          {
            "label": "lockTimeEpochs",
            "offset": 0,
            "slot": "852",
            "type": "t_uint256",
            "contract": "Bridge",
            "src": "contracts/Bridge.sol:90"
          },
          {
            "label": "liquidityEpochLength",
            "offset": 0,
            "slot": "853",
            "type": "t_uint256",
            "contract": "Bridge",
            "src": "contracts/Bridge.sol:91"
          },
          {
            "label": "mpond",
            "offset": 0,
            "slot": "854",
            "type": "t_contract(MPond)6014",
            "contract": "Bridge",
            "src": "contracts/Bridge.sol:93"
          },
          {
            "label": "pond",
            "offset": 0,
            "slot": "855",
            "type": "t_contract(Pond)6318",
            "contract": "Bridge",
            "src": "contracts/Bridge.sol:94"
          },
          {
            "label": "startTime",
            "offset": 0,
            "slot": "856",
            "type": "t_uint256",
            "contract": "Bridge",
            "src": "contracts/Bridge.sol:95"
          },
          {
            "label": "liquidityStartTime",
            "offset": 0,
            "slot": "857",
            "type": "t_uint256",
            "contract": "Bridge",
            "src": "contracts/Bridge.sol:96"
          },
          {
            "label": "requests",
            "offset": 0,
            "slot": "858",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Requests)3698_storage))",
            "contract": "Bridge",
            "src": "contracts/Bridge.sol:115"
          },
          {
            "label": "claimedAmounts",
            "offset": 0,
            "slot": "859",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "Bridge",
            "src": "contracts/Bridge.sol:116"
          },
          {
            "label": "totalAmountPlacedInRequests",
            "offset": 0,
            "slot": "860",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Bridge",
            "src": "contracts/Bridge.sol:117"
          },
          {
            "label": "stakingContract",
            "offset": 0,
            "slot": "861",
            "type": "t_address",
            "contract": "Bridge",
            "src": "contracts/Bridge.sol:119"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]",
            "numberOfBytes": "16000"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(MPond)6014": {
            "label": "contract MPond",
            "numberOfBytes": "20"
          },
          "t_contract(Pond)6318": {
            "label": "contract Pond",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Requests)3698_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Bridge.Requests))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Requests)3698_storage)": {
            "label": "mapping(uint256 => struct Bridge.Requests)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3181_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2880_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Requests)3698_storage": {
            "label": "struct Bridge.Requests",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "releaseEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)2880_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "e6119d023e106fb8a08000acbad1d8fa84ffcedd869cff10be529bbc0b7e339e": {
      "address": "0xeeAb5787Ea85308e95Ad52ef431F3A67ca6cB62E",
      "txHash": "0x1d7ff48debe9ace01f2bf42029388a7b0ad5bbd028d6b1c062e3836b8e8a00cf",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "label": "__gap0",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)500_storage",
            "contract": "Bridge",
            "src": "contracts/Bridge.sol:23"
          },
          {
            "label": "__gap1",
            "offset": 0,
            "slot": "801",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Bridge",
            "src": "contracts/Bridge.sol:62"
          },
          {
            "label": "liquidityBp",
            "offset": 0,
            "slot": "851",
            "type": "t_uint256",
            "contract": "Bridge",
            "src": "contracts/Bridge.sol:89"
          },
          {
            "label": "lockTimeEpochs",
            "offset": 0,
            "slot": "852",
            "type": "t_uint256",
            "contract": "Bridge",
            "src": "contracts/Bridge.sol:90"
          },
          {
            "label": "liquidityEpochLength",
            "offset": 0,
            "slot": "853",
            "type": "t_uint256",
            "contract": "Bridge",
            "src": "contracts/Bridge.sol:91"
          },
          {
            "label": "mpond",
            "offset": 0,
            "slot": "854",
            "type": "t_contract(MPond)7567",
            "contract": "Bridge",
            "src": "contracts/Bridge.sol:93"
          },
          {
            "label": "pond",
            "offset": 0,
            "slot": "855",
            "type": "t_contract(Pond)7871",
            "contract": "Bridge",
            "src": "contracts/Bridge.sol:94"
          },
          {
            "label": "startTime",
            "offset": 0,
            "slot": "856",
            "type": "t_uint256",
            "contract": "Bridge",
            "src": "contracts/Bridge.sol:95"
          },
          {
            "label": "liquidityStartTime",
            "offset": 0,
            "slot": "857",
            "type": "t_uint256",
            "contract": "Bridge",
            "src": "contracts/Bridge.sol:96"
          },
          {
            "label": "requests",
            "offset": 0,
            "slot": "858",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Requests)3776_storage))",
            "contract": "Bridge",
            "src": "contracts/Bridge.sol:115"
          },
          {
            "label": "claimedAmounts",
            "offset": 0,
            "slot": "859",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "Bridge",
            "src": "contracts/Bridge.sol:116"
          },
          {
            "label": "totalAmountPlacedInRequests",
            "offset": 0,
            "slot": "860",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Bridge",
            "src": "contracts/Bridge.sol:117"
          },
          {
            "label": "stakingContract",
            "offset": 0,
            "slot": "861",
            "type": "t_address",
            "contract": "Bridge",
            "src": "contracts/Bridge.sol:119"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]",
            "numberOfBytes": "16000"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(MPond)7567": {
            "label": "contract MPond",
            "numberOfBytes": "20"
          },
          "t_contract(Pond)7871": {
            "label": "contract Pond",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Requests)3776_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Bridge.Requests))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Requests)3776_storage)": {
            "label": "mapping(uint256 => struct Bridge.Requests)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3181_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2880_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Requests)3776_storage": {
            "label": "struct Bridge.Requests",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "releaseEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)2880_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "4698df10da00690bd5e2ac9c157ddd0652096662550ece852a62f19cea7ca85a": {
      "address": "0xDE3b133f588903e50598985253C6F86a070b2f04",
      "txHash": "0xd23e3e9847231cb14a87bd4dbcc2a4120540ce9a0e9f25ef6a18072d1b81b132",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3475_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap0",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)500_storage",
            "contract": "RewardDelegators",
            "src": "contracts/staking/RewardDelegators.sol:31"
          },
          {
            "label": "__gap1",
            "offset": 0,
            "slot": "801",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RewardDelegators",
            "src": "contracts/staking/RewardDelegators.sol:71"
          },
          {
            "label": "clusters",
            "offset": 0,
            "slot": "851",
            "type": "t_mapping(t_address,t_struct(Cluster)5726_storage)",
            "contract": "RewardDelegators",
            "src": "contracts/staking/RewardDelegators.sol:136"
          },
          {
            "label": "stakeAddress",
            "offset": 0,
            "slot": "852",
            "type": "t_address",
            "contract": "RewardDelegators",
            "src": "contracts/staking/RewardDelegators.sol:138"
          },
          {
            "label": "rewardFactor",
            "offset": 0,
            "slot": "853",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "RewardDelegators",
            "src": "contracts/staking/RewardDelegators.sol:139"
          },
          {
            "label": "tokenIndex",
            "offset": 0,
            "slot": "854",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "RewardDelegators",
            "src": "contracts/staking/RewardDelegators.sol:140"
          },
          {
            "label": "tokenList",
            "offset": 0,
            "slot": "855",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "RewardDelegators",
            "src": "contracts/staking/RewardDelegators.sol:141"
          },
          {
            "label": "clusterRewards",
            "offset": 0,
            "slot": "856",
            "type": "t_contract(IClusterRewards)7463",
            "contract": "RewardDelegators",
            "src": "contracts/staking/RewardDelegators.sol:142"
          },
          {
            "label": "clusterRegistry",
            "offset": 0,
            "slot": "857",
            "type": "t_contract(IClusterRegistry)7390",
            "contract": "RewardDelegators",
            "src": "contracts/staking/RewardDelegators.sol:143"
          },
          {
            "label": "PONDToken",
            "offset": 0,
            "slot": "858",
            "type": "t_contract(IERC20Upgradeable)1350",
            "contract": "RewardDelegators",
            "src": "contracts/staking/RewardDelegators.sol:144"
          },
          {
            "label": "thresholdForSelection",
            "offset": 0,
            "slot": "859",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "RewardDelegators",
            "src": "contracts/staking/RewardDelegators.sol:146"
          },
          {
            "label": "tokenWeights",
            "offset": 0,
            "slot": "860",
            "type": "t_mapping(t_bytes32,t_struct(TokenWeight)5731_storage)",
            "contract": "RewardDelegators",
            "src": "contracts/staking/RewardDelegators.sol:147"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]",
            "numberOfBytes": "16000"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IClusterRegistry)7390": {
            "label": "contract IClusterRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IClusterRewards)7463": {
            "label": "contract IClusterRewards",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1350": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Cluster)5726_storage)": {
            "label": "mapping(address => struct RewardDelegators.Cluster)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3475_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(TokenWeight)5731_storage)": {
            "label": "mapping(bytes32 => struct RewardDelegators.TokenWeight)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3475_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3160_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Cluster)5726_storage": {
            "label": "struct RewardDelegators.Cluster",
            "members": [
              {
                "label": "totalDelegations",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "delegators",
                "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardDebt",
                "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "accRewardPerShare",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3160_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenWeight)5731_storage": {
            "label": "struct RewardDelegators.TokenWeight",
            "members": [
              {
                "label": "forThreshold",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "forDelegation",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "db5dfb6692ff47f8f5414cf8f9966d392b3abae867ea6ded8a67a6d09dbd2809": {
      "address": "0x450b3C0BdD75BEb3761F3a226e7F81048A8F376d",
      "txHash": "0xe08f10b480a21e4ebb594b3b112a822ee655cbe7cd17038fe9f44b1e3ea5e46e",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4493_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap0",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)500_storage",
            "contract": "StakeManager",
            "src": "contracts/staking/StakeManager.sol:29"
          },
          {
            "label": "__gap1",
            "offset": 0,
            "slot": "801",
            "type": "t_array(t_uint256)50_storage",
            "contract": "StakeManager",
            "src": "contracts/staking/StakeManager.sol:64"
          },
          {
            "label": "locks",
            "offset": 0,
            "slot": "851",
            "type": "t_mapping(t_bytes32,t_struct(Lock)15894_storage)",
            "contract": "StakeManager",
            "src": "contracts/staking/StakeManager.sol:107"
          },
          {
            "label": "lockWaitTime",
            "offset": 0,
            "slot": "852",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "StakeManager",
            "src": "contracts/staking/StakeManager.sol:108"
          },
          {
            "label": "__gap2",
            "offset": 0,
            "slot": "853",
            "type": "t_array(t_uint256)48_storage",
            "contract": "StakeManager",
            "src": "contracts/staking/StakeManager.sol:110"
          },
          {
            "label": "tokens",
            "offset": 0,
            "slot": "901",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "StakeManager",
            "src": "contracts/staking/StakeManager.sol:192"
          },
          {
            "label": "tokenList",
            "offset": 0,
            "slot": "902",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "StakeManager",
            "src": "contracts/staking/StakeManager.sol:193"
          },
          {
            "label": "tokenIndex",
            "offset": 0,
            "slot": "903",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "StakeManager",
            "src": "contracts/staking/StakeManager.sol:194"
          },
          {
            "label": "__gap3",
            "offset": 0,
            "slot": "904",
            "type": "t_array(t_uint256)47_storage",
            "contract": "StakeManager",
            "src": "contracts/staking/StakeManager.sol:196"
          },
          {
            "label": "stashes",
            "offset": 0,
            "slot": "951",
            "type": "t_mapping(t_bytes32,t_struct(Stash)16565_storage)",
            "contract": "StakeManager",
            "src": "contracts/staking/StakeManager.sol:297"
          },
          {
            "label": "stashIndex",
            "offset": 0,
            "slot": "952",
            "type": "t_uint256",
            "contract": "StakeManager",
            "src": "contracts/staking/StakeManager.sol:299"
          },
          {
            "label": "rewardDelegators",
            "offset": 0,
            "slot": "953",
            "type": "t_contract(IRewardDelegators)18526",
            "contract": "StakeManager",
            "src": "contracts/staking/StakeManager.sol:301"
          },
          {
            "label": "__gap4",
            "offset": 0,
            "slot": "954",
            "type": "t_array(t_uint256)47_storage",
            "contract": "StakeManager",
            "src": "contracts/staking/StakeManager.sol:303"
          },
          {
            "label": "__gap5",
            "offset": 0,
            "slot": "1001",
            "type": "t_array(t_uint256)50_storage",
            "contract": "StakeManager",
            "src": "contracts/staking/StakeManager.sol:424"
          },
          {
            "label": "__gap6",
            "offset": 0,
            "slot": "1051",
            "type": "t_array(t_uint256)50_storage",
            "contract": "StakeManager",
            "src": "contracts/staking/StakeManager.sol:665"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]",
            "numberOfBytes": "16000"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IRewardDelegators)18526": {
            "label": "contract IRewardDelegators",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4493_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Lock)15894_storage)": {
            "label": "mapping(bytes32 => struct StakeManager.Lock)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Stash)16565_storage)": {
            "label": "mapping(bytes32 => struct StakeManager.Stash)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4493_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4178_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Lock)15894_storage": {
            "label": "struct StakeManager.Lock",
            "members": [
              {
                "label": "unlockTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "iValue",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)4178_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Stash)16565_storage": {
            "label": "struct StakeManager.Stash",
            "members": [
              {
                "label": "staker",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "delegatedCluster",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amounts",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "__unused_govDelegations",
                "type": "t_mapping(t_bytes32,t_address)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9adb1395356ebbf65954e3d5234f106a5b46cf9e3bb6ca4a4d325549f18ffcba": {
      "address": "0xf4137957B53668800CEAb1Eb71ACb91aDdD1D8fe",
      "txHash": "0xa2276d80f4d8bf3ff4c5c9f989ca1f585910fa78df1a5850fcd32af0aef3e377",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4493_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap0",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)500_storage",
            "contract": "ClusterRegistry",
            "src": "contracts/staking/ClusterRegistry.sol:26"
          },
          {
            "label": "__gap1",
            "offset": 0,
            "slot": "801",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ClusterRegistry",
            "src": "contracts/staking/ClusterRegistry.sol:61"
          },
          {
            "label": "locks",
            "offset": 0,
            "slot": "851",
            "type": "t_mapping(t_bytes32,t_struct(Lock)9957_storage)",
            "contract": "ClusterRegistry",
            "src": "contracts/staking/ClusterRegistry.sol:92"
          },
          {
            "label": "lockWaitTime",
            "offset": 0,
            "slot": "852",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ClusterRegistry",
            "src": "contracts/staking/ClusterRegistry.sol:93"
          },
          {
            "label": "clusters",
            "offset": 0,
            "slot": "853",
            "type": "t_mapping(t_address,t_struct(Cluster)10056_storage)",
            "contract": "ClusterRegistry",
            "src": "contracts/staking/ClusterRegistry.sol:131"
          },
          {
            "label": "clientKeys",
            "offset": 0,
            "slot": "854",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ClusterRegistry",
            "src": "contracts/staking/ClusterRegistry.sol:132"
          },
          {
            "label": "rewardDelegators",
            "offset": 0,
            "slot": "855",
            "type": "t_contract(IRewardDelegators)18526",
            "contract": "ClusterRegistry",
            "src": "contracts/staking/ClusterRegistry.sol:134"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]",
            "numberOfBytes": "16000"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IRewardDelegators)18526": {
            "label": "contract IRewardDelegators",
            "numberOfBytes": "20"
          },
          "t_enum(Status)10044": {
            "label": "enum ClusterRegistry.Status",
            "members": [
              "NOT_REGISTERED",
              "REGISTERED"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Cluster)10056_storage)": {
            "label": "mapping(address => struct ClusterRegistry.Cluster)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4493_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Lock)9957_storage)": {
            "label": "mapping(bytes32 => struct ClusterRegistry.Lock)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4493_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4178_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Cluster)10056_storage": {
            "label": "struct ClusterRegistry.Cluster",
            "members": [
              {
                "label": "networkId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "commission",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "clientKey",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "status",
                "type": "t_enum(Status)10044",
                "offset": 20,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Lock)9957_storage": {
            "label": "struct ClusterRegistry.Lock",
            "members": [
              {
                "label": "unlockBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "iValue",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)4178_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ada3319224ede1cf04332b19e3b4c7213f49d6d49f1632b9b20afeb0782b7d07": {
      "address": "0x2C41eBD981084e073FAFC56CD0c8BF785FBDD23d",
      "txHash": "0x3eef27b605ab1435186d233d62f1694d4602b3675f9cc71e4c8366f9d5ad3589",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3475_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "addressToIndexMap",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TreeUpgradeable",
            "src": "contracts/staking/EpochSelection/TreeUpgradeable.sol:28"
          },
          {
            "label": "indexToAddressMap",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "TreeUpgradeable",
            "src": "contracts/staking/EpochSelection/TreeUpgradeable.sol:31"
          },
          {
            "label": "nodes",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_struct(Node)4589_storage)dyn_storage",
            "contract": "TreeUpgradeable",
            "src": "contracts/staking/EpochSelection/TreeUpgradeable.sol:34"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)47_storage",
            "contract": "TreeUpgradeable",
            "src": "contracts/staking/EpochSelection/TreeUpgradeable.sol:36"
          },
          {
            "label": "numberOfClustersToSelect",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "EpochSelectorUpgradeable",
            "src": "contracts/staking/EpochSelection/EpochSelector.sol:54"
          },
          {
            "label": "clustersSelected",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "EpochSelectorUpgradeable",
            "src": "contracts/staking/EpochSelection/EpochSelector.sol:57"
          },
          {
            "label": "rewardForSelectingClusters",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "EpochSelectorUpgradeable",
            "src": "contracts/staking/EpochSelection/EpochSelector.sol:60"
          },
          {
            "label": "rewardToken",
            "offset": 0,
            "slot": "354",
            "type": "t_address",
            "contract": "EpochSelectorUpgradeable",
            "src": "contracts/staking/EpochSelection/EpochSelector.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Node)4589_storage)dyn_storage": {
            "label": "struct TreeUpgradeable.Node[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3475_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3475_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3160_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Node)4589_storage": {
            "label": "struct TreeUpgradeable.Node",
            "members": [
              {
                "label": "value",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "leftSum",
                "type": "t_uint64",
                "offset": 8,
                "slot": "0"
              },
              {
                "label": "rightSum",
                "type": "t_uint64",
                "offset": 16,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3160_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "976343d6d5445ac1c6e0a2f4e85795451420c1993e3960f43c33a7d4f8f697dd": {
      "address": "0x8D59726dBA36c9D3c5B41d10b6a647488EA3d2AF",
      "txHash": "0xca937c1e440f8d6d2811a77162acacb550832b7f0e207231df87687486fd5252",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_accountBalanceSnapshots",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_struct(Snapshots)9840_storage)",
            "contract": "ERC20SnapshotUpgradeable",
            "src": "contracts/staking/lib/ERC20SnapshotUpgradeable.sol:67"
          },
          {
            "label": "_totalSupplySnapshots",
            "offset": 0,
            "slot": "102",
            "type": "t_struct(Snapshots)9840_storage",
            "contract": "ERC20SnapshotUpgradeable",
            "src": "contracts/staking/lib/ERC20SnapshotUpgradeable.sol:68"
          },
          {
            "label": "_currentSnapshotId",
            "offset": 0,
            "slot": "104",
            "type": "t_struct(Counter)2792_storage",
            "contract": "ERC20SnapshotUpgradeable",
            "src": "contracts/staking/lib/ERC20SnapshotUpgradeable.sol:71"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC20SnapshotUpgradeable",
            "src": "contracts/staking/lib/ERC20SnapshotUpgradeable.sol:206"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4342_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap0",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)500_storage",
            "contract": "ReceiverStaking",
            "src": "contracts/staking/ReceiverStaking.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]",
            "numberOfBytes": "16000"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Snapshots)9840_storage)": {
            "label": "mapping(address => struct ERC20SnapshotUpgradeable.Snapshots)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4342_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4342_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4027_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2792_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)4027_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Snapshots)9840_storage": {
            "label": "struct ERC20SnapshotUpgradeable.Snapshots",
            "members": [
              {
                "label": "ids",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7bd90ee41621478ec6c5b9aaf8cf37a8f9755ce39605a5a75aa54496f65e433e": {
      "address": "0x0Cc9E5fdf6e17340B5BD5a617105cFafD4b69aBA",
      "txHash": "0xd43518cb51c17938f5369c6c5e20d5c21a5d1c83971ef76cd3cc6bb7c5bee5fe",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3080_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap0",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)500_storage",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:27"
          },
          {
            "label": "__gap1",
            "offset": 0,
            "slot": "801",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:62"
          },
          {
            "label": "clusterRewards",
            "offset": 0,
            "slot": "851",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:117"
          },
          {
            "label": "rewardWeight",
            "offset": 0,
            "slot": "852",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:119"
          },
          {
            "label": "totalRewardWeight",
            "offset": 0,
            "slot": "853",
            "type": "t_uint256",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:120"
          },
          {
            "label": "totalRewardsPerEpoch",
            "offset": 0,
            "slot": "854",
            "type": "t_uint256",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:121"
          },
          {
            "label": "__unused_1",
            "offset": 0,
            "slot": "855",
            "type": "t_uint256",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:122"
          },
          {
            "label": "__unused_2",
            "offset": 0,
            "slot": "856",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:124"
          },
          {
            "label": "__unused_3",
            "offset": 0,
            "slot": "857",
            "type": "t_uint256",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:125"
          },
          {
            "label": "__unused_4",
            "offset": 0,
            "slot": "858",
            "type": "t_uint256",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:126"
          },
          {
            "label": "ticketsIssued",
            "offset": 0,
            "slot": "859",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:128"
          },
          {
            "label": "epochSelectors",
            "offset": 0,
            "slot": "860",
            "type": "t_mapping(t_bytes32,t_contract(IEpochSelector)4486)",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:129"
          },
          {
            "label": "receiverStaking",
            "offset": 0,
            "slot": "861",
            "type": "t_contract(IReceiverStaking)4512",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:130"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]",
            "numberOfBytes": "16000"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IEpochSelector)4486": {
            "label": "contract IEpochSelector",
            "numberOfBytes": "20"
          },
          "t_contract(IReceiverStaking)4512": {
            "label": "contract IReceiverStaking",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_contract(IEpochSelector)4486)": {
            "label": "mapping(bytes32 => contract IEpochSelector)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3080_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3080_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2765_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)2765_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0d275d750c0683860773ebc2104d4c32118403b9dc7f3e902f12e4c27ddf4182": {
      "address": "0x5cfDF4FBa886923eBC852AB5bf1bCb72aF88b5e6",
      "txHash": "0x9c65439bfcd4a8a1c7222e60e3e4f2f8b5f31aedaa30043d3a7ed8db6298d8af",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_accountBalanceSnapshots",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_struct(Snapshots)5876_storage)",
            "contract": "ERC20SnapshotUpgradeable",
            "src": "contracts/staking/lib/ERC20SnapshotUpgradeable.sol:67"
          },
          {
            "label": "_totalSupplySnapshots",
            "offset": 0,
            "slot": "102",
            "type": "t_struct(Snapshots)5876_storage",
            "contract": "ERC20SnapshotUpgradeable",
            "src": "contracts/staking/lib/ERC20SnapshotUpgradeable.sol:68"
          },
          {
            "label": "_currentSnapshotId",
            "offset": 0,
            "slot": "104",
            "type": "t_struct(Counter)2475_storage",
            "contract": "ERC20SnapshotUpgradeable",
            "src": "contracts/staking/lib/ERC20SnapshotUpgradeable.sol:71"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC20SnapshotUpgradeable",
            "src": "contracts/staking/lib/ERC20SnapshotUpgradeable.sol:206"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4025_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap0",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)500_storage",
            "contract": "ReceiverStaking",
            "src": "contracts/staking/ReceiverStaking.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]",
            "numberOfBytes": "16000"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Snapshots)5876_storage)": {
            "label": "mapping(address => struct ERC20SnapshotUpgradeable.Snapshots)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4025_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4025_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3710_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2475_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3710_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Snapshots)5876_storage": {
            "label": "struct ERC20SnapshotUpgradeable.Snapshots",
            "members": [
              {
                "label": "ids",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
