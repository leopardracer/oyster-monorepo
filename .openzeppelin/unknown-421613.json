{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xa9472a9C135Cb33221de441a4DEd393FD515a69C",
      "txHash": "0xa36570bdbb1227e3048de714dd4a5bd7f50d1e237f50e9bd36c83dde52adc9e8",
      "kind": "uups"
    },
    {
      "address": "0x29cbA3c69CB4Cf89a4e8b5f698df7C607A488e4f",
      "txHash": "0x05de1b58db54fb9334254ddaf6597371ea511085359aefb267e8f738d5df776a",
      "kind": "uups"
    },
    {
      "address": "0x0B3d9b224496C2A2Fa1a4096D8EB4D350eFd9079",
      "txHash": "0x1713d0dab74d185abe820065a0250dc3cf49337fbd4a15553632f6c5fd4b1305",
      "kind": "uups"
    },
    {
      "address": "0xCb106cAB93E3774Ed4bdcd5AD564077Ad8FA835f",
      "txHash": "0x315a768a0af0c3d4f3ce38fbb7fa5809101ce82696fc9a1c298e1d4caa8c847a",
      "kind": "uups"
    },
    {
      "address": "0x38cF9E385aC857D641b6AAF73591fb4A75608CA8",
      "txHash": "0xe2574451276eebf30ba0b685335aee7796f6982a15688676be5884c364cbde7d",
      "kind": "uups"
    },
    {
      "address": "0x777c32858660B3B38D54216c43589A74a4896220",
      "txHash": "0x5ede3ba3172a8f82a75bd0c0200686306600b2506cdd1acc646af492050a15f6",
      "kind": "uups"
    }
  ],
  "impls": {
    "c9a4474bd3e8c57db1a268a6654b7770cb72332fd7532c47eeb83c9ffd001011": {
      "address": "0xC5e7523B3C49403daf5008c4ac050B48ABF91Adc",
      "txHash": "0xed7fd2d0f843a0a9cc59a56e71405788a2bdb9731e5a1e52a22a2b37a5becbe5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:13"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:43"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Pond",
            "label": "__gap0",
            "type": "t_array(t_uint256)500_storage",
            "src": "contracts/Pond.sol:30"
          },
          {
            "contract": "Pond",
            "label": "l1Address",
            "type": "t_address",
            "src": "contracts/Pond.sol:85"
          },
          {
            "contract": "Pond",
            "label": "__gap1",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/Pond.sol:86"
          }
        ],
        "types": {
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)3181_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2880_storage"
              }
            ]
          },
          "t_struct(Set)2880_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ebe0524cb7326c59024a5a9dbfe0dadbde61673674f89516b59e49328542f904": {
      "address": "0x8253C15e7d213DA7307482c19c4BdA1C12fC7b54",
      "txHash": "0x98564e55b3374030e4bf08b57f246b71bea3d22ed28fbd01f6a6200de1f1ee78",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "LockUpgradeable",
            "label": "locks",
            "type": "t_mapping(t_bytes32,t_struct(Lock)10168_storage)",
            "src": "contracts/lock/LockUpgradeable.sol:19"
          },
          {
            "contract": "LockUpgradeable",
            "label": "lockWaitTime",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/lock/LockUpgradeable.sol:20"
          },
          {
            "contract": "MarketV1",
            "label": "__gap0",
            "type": "t_array(t_uint256)500_storage",
            "src": "contracts/enclaves/MarketV1.sol:27"
          },
          {
            "contract": "MarketV1",
            "label": "__gap1",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/enclaves/MarketV1.sol:62"
          },
          {
            "contract": "MarketV1",
            "label": "providers",
            "type": "t_mapping(t_address,t_struct(Provider)9444_storage)",
            "src": "contracts/enclaves/MarketV1.sol:97"
          },
          {
            "contract": "MarketV1",
            "label": "__gap2",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/enclaves/MarketV1.sol:99"
          },
          {
            "contract": "MarketV1",
            "label": "jobs",
            "type": "t_mapping(t_bytes32,t_struct(Job)9576_storage)",
            "src": "contracts/enclaves/MarketV1.sol:150"
          },
          {
            "contract": "MarketV1",
            "label": "jobIndex",
            "type": "t_uint256",
            "src": "contracts/enclaves/MarketV1.sol:151"
          },
          {
            "contract": "MarketV1",
            "label": "token",
            "type": "t_contract(IERC20)3546",
            "src": "contracts/enclaves/MarketV1.sol:153"
          },
          {
            "contract": "MarketV1",
            "label": "__gap3",
            "type": "t_array(t_uint256)47_storage",
            "src": "contracts/enclaves/MarketV1.sol:155"
          }
        ],
        "types": {
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_struct(Provider)9444_storage)": {
            "label": "mapping(address => struct MarketV1.Provider)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Provider)9444_storage": {
            "label": "struct MarketV1.Provider",
            "members": [
              {
                "label": "cp",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(Job)9576_storage)": {
            "label": "mapping(bytes32 => struct MarketV1.Job)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Job)9576_storage": {
            "label": "struct MarketV1.Job",
            "members": [
              {
                "label": "metadata",
                "type": "t_string_storage"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "provider",
                "type": "t_address"
              },
              {
                "label": "rate",
                "type": "t_uint256"
              },
              {
                "label": "balance",
                "type": "t_uint256"
              },
              {
                "label": "lastSettled",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IERC20)3546": {
            "label": "contract IERC20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_mapping(t_bytes32,t_struct(Lock)10168_storage)": {
            "label": "mapping(bytes32 => struct LockUpgradeable.Lock)"
          },
          "t_struct(Lock)10168_storage": {
            "label": "struct LockUpgradeable.Lock",
            "members": [
              {
                "label": "unlockTime",
                "type": "t_uint256"
              },
              {
                "label": "iValue",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_struct(AddressSet)3181_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2880_storage"
              }
            ]
          },
          "t_struct(Set)2880_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "428f0950908cdb520923b0f4508810651a44a3ced03f663a264fb7072bc225c6": {
      "address": "0x31a83CA0c80b014279894CA476B043f3FDdaadd4",
      "txHash": "0xf7c8c550679a8cd4edf87fa893690dfff4842aacf11dc2589e3b949ff699f20f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "MPond",
            "label": "__gap0",
            "type": "t_array(t_uint256)500_storage",
            "src": "contracts/MPond.sol:37"
          },
          {
            "contract": "MPond",
            "label": "__gap1",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/MPond.sol:69"
          },
          {
            "contract": "MPond",
            "label": "__gap2",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/MPond.sol:93"
          },
          {
            "contract": "MPond",
            "label": "allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint96))",
            "src": "contracts/MPond.sol:129"
          },
          {
            "contract": "MPond",
            "label": "balances",
            "type": "t_mapping(t_address,t_struct(Balance)5923_storage)",
            "src": "contracts/MPond.sol:139"
          },
          {
            "contract": "MPond",
            "label": "__gap3",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/MPond.sol:141"
          },
          {
            "contract": "MPond",
            "label": "delegates",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint96))",
            "src": "contracts/MPond.sol:354"
          },
          {
            "contract": "MPond",
            "label": "nonces",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/MPond.sol:357"
          },
          {
            "contract": "MPond",
            "label": "__gap4",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/MPond.sol:359"
          },
          {
            "contract": "MPond",
            "label": "checkpoints",
            "type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)6887_storage))",
            "src": "contracts/MPond.sol:556"
          },
          {
            "contract": "MPond",
            "label": "numCheckpoints",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "contracts/MPond.sol:559"
          },
          {
            "contract": "MPond",
            "label": "__gap5",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/MPond.sol:561"
          },
          {
            "contract": "MPond",
            "label": "__gap6",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/MPond.sol:690"
          },
          {
            "contract": "MPond",
            "label": "l1Address",
            "type": "t_address",
            "src": "contracts/MPond.sol:738"
          },
          {
            "contract": "MPond",
            "label": "__gap7",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/MPond.sol:739"
          }
        ],
        "types": {
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint96))": {
            "label": "mapping(address => mapping(address => uint96))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint96)": {
            "label": "mapping(address => uint96)"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_address,t_struct(Balance)5923_storage)": {
            "label": "mapping(address => struct MPond.Balance)"
          },
          "t_struct(Balance)5923_storage": {
            "label": "struct MPond.Balance",
            "members": [
              {
                "label": "undelegated",
                "type": "t_uint96"
              },
              {
                "label": "token",
                "type": "t_uint96"
              },
              {
                "label": "__unused",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)6887_storage))": {
            "label": "mapping(address => mapping(uint32 => struct MPond.Checkpoint))"
          },
          "t_mapping(t_uint32,t_struct(Checkpoint)6887_storage)": {
            "label": "mapping(uint32 => struct MPond.Checkpoint)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_struct(Checkpoint)6887_storage": {
            "label": "struct MPond.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32"
              },
              {
                "label": "votes",
                "type": "t_uint96"
              }
            ]
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)3181_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2880_storage"
              }
            ]
          },
          "t_struct(Set)2880_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "8137288b7dd833b49699769c3e90cb3770c4ad4bab315ff9ea3268dbdeea93b5": {
      "address": "0x3dc53393F069e1db4aa08827BD9fe6adeA3B4c1C",
      "txHash": "0x61bd0356170d39b12bd9001215683cc6670032f0fe67e92906ca4b8563fb8762",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "ClusterRegistry",
            "label": "__gap0",
            "type": "t_array(t_uint256)500_storage",
            "src": "contracts/staking/ClusterRegistry.sol:22"
          },
          {
            "contract": "ClusterRegistry",
            "label": "__gap1",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/staking/ClusterRegistry.sol:57"
          },
          {
            "contract": "ClusterRegistry",
            "label": "locks",
            "type": "t_mapping(t_bytes32,t_struct(Lock)10743_storage)",
            "src": "contracts/staking/ClusterRegistry.sol:87"
          },
          {
            "contract": "ClusterRegistry",
            "label": "lockWaitTime",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/staking/ClusterRegistry.sol:88"
          },
          {
            "contract": "ClusterRegistry",
            "label": "clusters",
            "type": "t_mapping(t_address,t_struct(Cluster)10814_storage)",
            "src": "contracts/staking/ClusterRegistry.sol:113"
          },
          {
            "contract": "ClusterRegistry",
            "label": "clientKeys",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/staking/ClusterRegistry.sol:114"
          }
        ],
        "types": {
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(Lock)10743_storage)": {
            "label": "mapping(bytes32 => struct ClusterRegistry.Lock)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Lock)10743_storage": {
            "label": "struct ClusterRegistry.Lock",
            "members": [
              {
                "label": "unlockBlock",
                "type": "t_uint256"
              },
              {
                "label": "iValue",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_struct(Cluster)10814_storage)": {
            "label": "mapping(address => struct ClusterRegistry.Cluster)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Cluster)10814_storage": {
            "label": "struct ClusterRegistry.Cluster",
            "members": [
              {
                "label": "networkId",
                "type": "t_bytes32"
              },
              {
                "label": "commission",
                "type": "t_uint256"
              },
              {
                "label": "rewardAddress",
                "type": "t_address"
              },
              {
                "label": "clientKey",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(Status)10802"
              }
            ]
          },
          "t_enum(Status)10802": {
            "label": "enum ClusterRegistry.Status",
            "members": [
              "NOT_REGISTERED",
              "REGISTERED"
            ]
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_struct(AddressSet)3181_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2880_storage"
              }
            ]
          },
          "t_struct(Set)2880_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "508c879c522af221bbab0df5aaeaf944f7f936bdd51dc04f1d60f6d0e5ed0712": {
      "address": "0x09CecBCe291dcFa45A7F9AABd5375e61f468032f",
      "txHash": "0x20dc902a66362c28e0e5d7b4e9f869371d80cf0502ef491d7b72c0357d3c1a3c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "RewardDelegators",
            "label": "__gap0",
            "type": "t_array(t_uint256)500_storage",
            "src": "contracts/staking/RewardDelegators.sol:26"
          },
          {
            "contract": "RewardDelegators",
            "label": "__gap1",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/staking/RewardDelegators.sol:61"
          },
          {
            "contract": "RewardDelegators",
            "label": "clusters",
            "type": "t_mapping(t_address,t_struct(Cluster)13133_storage)",
            "src": "contracts/staking/RewardDelegators.sol:118"
          },
          {
            "contract": "RewardDelegators",
            "label": "stakeAddress",
            "type": "t_address",
            "src": "contracts/staking/RewardDelegators.sol:120"
          },
          {
            "contract": "RewardDelegators",
            "label": "rewardFactor",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/staking/RewardDelegators.sol:121"
          },
          {
            "contract": "RewardDelegators",
            "label": "tokenIndex",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/staking/RewardDelegators.sol:122"
          },
          {
            "contract": "RewardDelegators",
            "label": "tokenList",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts/staking/RewardDelegators.sol:123"
          },
          {
            "contract": "RewardDelegators",
            "label": "clusterRewards",
            "type": "t_contract(IClusterRewards)12696",
            "src": "contracts/staking/RewardDelegators.sol:124"
          },
          {
            "contract": "RewardDelegators",
            "label": "clusterRegistry",
            "type": "t_contract(IClusterRegistry)12583",
            "src": "contracts/staking/RewardDelegators.sol:125"
          },
          {
            "contract": "RewardDelegators",
            "label": "PONDToken",
            "type": "t_contract(IERC20Upgradeable)1834",
            "src": "contracts/staking/RewardDelegators.sol:126"
          }
        ],
        "types": {
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_struct(Cluster)13133_storage)": {
            "label": "mapping(address => struct RewardDelegators.Cluster)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Cluster)13133_storage": {
            "label": "struct RewardDelegators.Cluster",
            "members": [
              {
                "label": "totalDelegations",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "delegators",
                "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))"
              },
              {
                "label": "rewardDebt",
                "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))"
              },
              {
                "label": "accRewardPerShare",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_contract(IClusterRewards)12696": {
            "label": "contract IClusterRewards"
          },
          "t_contract(IClusterRegistry)12583": {
            "label": "contract IClusterRegistry"
          },
          "t_contract(IERC20Upgradeable)1834": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_struct(AddressSet)3181_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2880_storage"
              }
            ]
          },
          "t_struct(Set)2880_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f1d4a56a049d3080b15649e0b103a318875ee7c41db501a895bd5418b902b406": {
      "address": "0xc22f4275cfB799b6119e913f14557C266834E909",
      "txHash": "0xb5f94a0240904b67ccac4c6117a65aaf3af079f890f22b73cfc241d550d02ea6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "StakeManager",
            "label": "__gap0",
            "type": "t_array(t_uint256)500_storage",
            "src": "contracts/staking/StakeManager.sol:26"
          },
          {
            "contract": "StakeManager",
            "label": "__gap1",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/staking/StakeManager.sol:61"
          },
          {
            "contract": "StakeManager",
            "label": "locks",
            "type": "t_mapping(t_bytes32,t_struct(Lock)14452_storage)",
            "src": "contracts/staking/StakeManager.sol:108"
          },
          {
            "contract": "StakeManager",
            "label": "lockWaitTime",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/staking/StakeManager.sol:109"
          },
          {
            "contract": "StakeManager",
            "label": "__gap2",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/staking/StakeManager.sol:111"
          },
          {
            "contract": "StakeManager",
            "label": "tokens",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/staking/StakeManager.sol:193"
          },
          {
            "contract": "StakeManager",
            "label": "tokenList",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts/staking/StakeManager.sol:194"
          },
          {
            "contract": "StakeManager",
            "label": "tokenIndex",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/staking/StakeManager.sol:195"
          },
          {
            "contract": "StakeManager",
            "label": "__gap3",
            "type": "t_array(t_uint256)47_storage",
            "src": "contracts/staking/StakeManager.sol:197"
          },
          {
            "contract": "StakeManager",
            "label": "stashes",
            "type": "t_mapping(t_bytes32,t_struct(Stash)15139_storage)",
            "src": "contracts/staking/StakeManager.sol:306"
          },
          {
            "contract": "StakeManager",
            "label": "stashIndex",
            "type": "t_uint256",
            "src": "contracts/staking/StakeManager.sol:308"
          },
          {
            "contract": "StakeManager",
            "label": "rewardDelegators",
            "type": "t_contract(IRewardDelegators)12850",
            "src": "contracts/staking/StakeManager.sol:310"
          },
          {
            "contract": "StakeManager",
            "label": "__gap4",
            "type": "t_array(t_uint256)47_storage",
            "src": "contracts/staking/StakeManager.sol:312"
          },
          {
            "contract": "StakeManager",
            "label": "__gap5",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/staking/StakeManager.sol:432"
          },
          {
            "contract": "StakeManager",
            "label": "__gap6",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/staking/StakeManager.sol:676"
          }
        ],
        "types": {
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(Lock)14452_storage)": {
            "label": "mapping(bytes32 => struct StakeManager.Lock)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Lock)14452_storage": {
            "label": "struct StakeManager.Lock",
            "members": [
              {
                "label": "unlockTime",
                "type": "t_uint256"
              },
              {
                "label": "iValue",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_mapping(t_bytes32,t_struct(Stash)15139_storage)": {
            "label": "mapping(bytes32 => struct StakeManager.Stash)"
          },
          "t_struct(Stash)15139_storage": {
            "label": "struct StakeManager.Stash",
            "members": [
              {
                "label": "staker",
                "type": "t_address"
              },
              {
                "label": "delegatedCluster",
                "type": "t_address"
              },
              {
                "label": "amounts",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "__unused_govDelegations",
                "type": "t_mapping(t_bytes32,t_address)"
              }
            ]
          },
          "t_contract(IRewardDelegators)12850": {
            "label": "contract IRewardDelegators"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_struct(AddressSet)3181_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2880_storage"
              }
            ]
          },
          "t_struct(Set)2880_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
