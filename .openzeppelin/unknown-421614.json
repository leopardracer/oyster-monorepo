{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x9cD510D5CE75eb2AcB3F1C97a8f53DbD66ca1167",
      "txHash": "0xf662b88a7945a79ebfbd54b67e04d639ce6335be8b477fc380ee38d37d0b1924",
      "kind": "uups"
    }
  ],
  "impls": {
    "c5b60ebafcab55c50689bc4e6625726ea87f436171d8714361c6d934b99eca96": {
      "address": "0x9e457bCDBa57754cFD6eEF8486621D167Fff220A",
      "txHash": "0x47ad1bce6aa2f11eedb6267aa0fffbb397edf2c01a8ea7d8fb33eb237d706e5c",
      "layout": {
        "solcVersion": "0.8.25",
        "storage": [
          {
            "label": "__gap_0",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)500_storage",
            "contract": "AttestationVerifier",
            "src": "contracts/AttestationVerifier.sol:22"
          },
          {
            "label": "whitelistedImages",
            "offset": 0,
            "slot": "500",
            "type": "t_mapping(t_bytes32,t_struct(EnclaveImage)4259_storage)",
            "contract": "AttestationVerifier",
            "src": "contracts/AttestationVerifier.sol:82"
          },
          {
            "label": "verifiedKeys",
            "offset": 0,
            "slot": "501",
            "type": "t_mapping(t_address,t_bytes32)",
            "contract": "AttestationVerifier",
            "src": "contracts/AttestationVerifier.sol:84"
          },
          {
            "label": "__gap_1",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)48_storage",
            "contract": "AttestationVerifier",
            "src": "contracts/AttestationVerifier.sol:86"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)93_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]",
            "numberOfBytes": "16000"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(EnclaveImage)4259_storage)": {
            "label": "mapping(bytes32 => struct AttestationVerifier.EnclaveImage)",
            "numberOfBytes": "32"
          },
          "t_struct(EnclaveImage)4259_storage": {
            "label": "struct AttestationVerifier.EnclaveImage",
            "members": [
              {
                "label": "PCR0",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "PCR1",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "PCR2",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
