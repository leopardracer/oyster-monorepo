{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x20BC113bEabB340Ed8Ba7926969192A1Ca489ddC",
      "txHash": "0xff5e2aa4ed86361ecdb9f57028313a7a32e1a16285be92547c8720d162d74b72",
      "kind": "uups"
    },
    {
      "address": "0xF727E7ACAa95Be373320A3DEf33876fEa34232bF",
      "txHash": "0xfa3507295150e809ff883f9c082e2da6926dcc46fa43b7ba4191ca1df41c8550",
      "kind": "uups"
    }
  ],
  "impls": {
    "932eed47427bda4ed19d9f5eec427265b359e088975e83ec5b85085a221441dc": {
      "address": "0x63d56BFa4F1bE7e880e5F0f67D5487bAE3b15f45",
      "txHash": "0x18c0ba2089675b79ad86621efe60eb9d2206e0613566620851ece88fe2b02a3b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)253_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3106_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:25"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:89"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "MPond",
            "label": "__gap0",
            "type": "t_array(t_uint256)500_storage",
            "src": "contracts/MPond.sol:33"
          },
          {
            "contract": "MPond",
            "label": "__gap1",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/MPond.sol:76"
          },
          {
            "contract": "MPond",
            "label": "__gap2",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/MPond.sol:100"
          },
          {
            "contract": "MPond",
            "label": "allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint96))",
            "src": "contracts/MPond.sol:136"
          },
          {
            "contract": "MPond",
            "label": "balances",
            "type": "t_mapping(t_address,t_struct(Balance)3676_storage)",
            "src": "contracts/MPond.sol:146"
          },
          {
            "contract": "MPond",
            "label": "__gap3",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/MPond.sol:148"
          },
          {
            "contract": "MPond",
            "label": "delegates",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint96))",
            "src": "contracts/MPond.sol:359"
          },
          {
            "contract": "MPond",
            "label": "nonces",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/MPond.sol:362"
          },
          {
            "contract": "MPond",
            "label": "__gap4",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/MPond.sol:364"
          },
          {
            "contract": "MPond",
            "label": "checkpoints",
            "type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)4602_storage))",
            "src": "contracts/MPond.sol:547"
          },
          {
            "contract": "MPond",
            "label": "numCheckpoints",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "contracts/MPond.sol:550"
          },
          {
            "contract": "MPond",
            "label": "__gap5",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/MPond.sol:552"
          },
          {
            "contract": "MPond",
            "label": "__gap6",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/MPond.sol:681"
          }
        ],
        "types": {
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint96))": {
            "label": "mapping(address => mapping(address => uint96))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint96)": {
            "label": "mapping(address => uint96)"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_address,t_struct(Balance)3676_storage)": {
            "label": "mapping(address => struct MPond.Balance)"
          },
          "t_struct(Balance)3676_storage": {
            "label": "struct MPond.Balance",
            "members": [
              {
                "label": "undelegated",
                "type": "t_uint96"
              },
              {
                "label": "token",
                "type": "t_uint96"
              },
              {
                "label": "__unused",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)4602_storage))": {
            "label": "mapping(address => mapping(uint32 => struct MPond.Checkpoint))"
          },
          "t_mapping(t_uint32,t_struct(Checkpoint)4602_storage)": {
            "label": "mapping(uint32 => struct MPond.Checkpoint)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_struct(Checkpoint)4602_storage": {
            "label": "struct MPond.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32"
              },
              {
                "label": "votes",
                "type": "t_uint96"
              }
            ]
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3106_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)3106_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2805_storage"
              }
            ]
          },
          "t_struct(Set)2805_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)253_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)253_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b83d65bfa6f8a6bee8d9a40981e887124c81a41088d8849bb76943740bd5d120": {
      "address": "0xda2b9bBA9BD61436422c00BCBb4c087a8928de85",
      "txHash": "0x4fb519d2df20160b9b6a990f68bf47a55f891dc65b0bd503524218d7cc4a3983",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)253_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3106_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:25"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:89"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:361"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:12"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:42"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3106_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)3106_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2805_storage"
              }
            ]
          },
          "t_struct(Set)2805_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)253_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)253_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
