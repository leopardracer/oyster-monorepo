{
	"schemaVersion": "2.0.0",
	"contractName": "Proxy",
	"compilerOutput": {
		"abi": [
			{
				"constant": false,
				"inputs": [
					{
						"name": "_newLogic",
						"type": "address"
					}
				],
				"name": "updateLogic",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "clash",
				"outputs": [
					{
						"name": "",
						"type": "string"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"name": "contractLogic",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"payable": true,
				"stateMutability": "payable",
				"type": "fallback"
			}
		],
		"evm": {
			"bytecode": {
				"linkReferences": {},
				"object": "0x608060405234801561001057600080fd5b506040516020806104fd8339810180604052602081101561003057600080fd5b81019080805190602001909291905050506000600160405180807f656970313936372e70726f78792e696d706c656d656e746174696f6e00000000815250601c019050604051809103902060019004036001029050818155600160405180807f656970313936372e70726f78792e61646d696e0000000000000000000000000081525060130190506040518091039020600190040360010290506000339050808255505050610419806100e46000396000f3fe60806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063795e617e146100bd57806393b3bbbe1461010e575b6000600160405180807f656970313936372e70726f78792e696d706c656d656e746174696f6e00000000815250601c01905060405180910390206001900403600102905080543660008037600080366000846127105a03f43d806000803e81600081146100b857816000f35b816000fd5b3480156100c957600080fd5b5061010c600480360360208110156100e057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061019e565b005b34801561011a57600080fd5b506101236102b9565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610163578082015181840152602081019050610148565b50505050905090810190601f1680156101905780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a66103a0565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561026e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001807f4f6e6c792041646d696e2073686f756c642062652061626c6520746f2075706481526020017f6174652074686520636f6e74726163747300000000000000000000000000000081525060400191505060405180910390fd5b6000600160405180807f656970313936372e70726f78792e696d706c656d656e746174696f6e00000000815250601c0190506040518091039020600190040360010290508181555050565b60606102c36103a0565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610365576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f4f6e6c792041646d696e2c2074657374696e672070726f787920636c6173680081525060200191505060405180910390fd5b6040805190810160405280600581526020017f50726f7879000000000000000000000000000000000000000000000000000000815250905090565b600080600160405180807f656970313936372e70726f78792e61646d696e00000000000000000000000000815250601301905060405180910390206001900403600102905080549150509056fea165627a7a72305820e75cbf8afd1013dde4be006ea2ad2aa889fb21c0a456cfb7639aafa45fc885be0029",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 PUSH2 0x4FD DUP4 CODECOPY DUP2 ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH32 0x656970313936372E70726F78792E696D706C656D656E746174696F6E00000000 DUP2 MSTORE POP PUSH1 0x1C ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 SWAP1 DIV SUB PUSH1 0x1 MUL SWAP1 POP DUP2 DUP2 SSTORE PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH32 0x656970313936372E70726F78792E61646D696E00000000000000000000000000 DUP2 MSTORE POP PUSH1 0x13 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 SWAP1 DIV SUB PUSH1 0x1 MUL SWAP1 POP PUSH1 0x0 CALLER SWAP1 POP DUP1 DUP3 SSTORE POP POP POP PUSH2 0x419 DUP1 PUSH2 0xE4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x795E617E EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x93B3BBBE EQ PUSH2 0x10E JUMPI JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH32 0x656970313936372E70726F78792E696D706C656D656E746174696F6E00000000 DUP2 MSTORE POP PUSH1 0x1C ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 SWAP1 DIV SUB PUSH1 0x1 MUL SWAP1 POP DUP1 SLOAD CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 PUSH2 0x2710 GAS SUB DELEGATECALL RETURNDATASIZE DUP1 PUSH1 0x0 DUP1 RETURNDATACOPY DUP2 PUSH1 0x0 DUP2 EQ PUSH2 0xB8 JUMPI DUP2 PUSH1 0x0 RETURN JUMPDEST DUP2 PUSH1 0x0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x19E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x163 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x148 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x190 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH2 0x3A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x26E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x31 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F6E6C792041646D696E2073686F756C642062652061626C6520746F20757064 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6174652074686520636F6E747261637473000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH32 0x656970313936372E70726F78792E696D706C656D656E746174696F6E00000000 DUP2 MSTORE POP PUSH1 0x1C ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 SWAP1 DIV SUB PUSH1 0x1 MUL SWAP1 POP DUP2 DUP2 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2C3 PUSH2 0x3A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x365 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F6E6C792041646D696E2C2074657374696E672070726F787920636C61736800 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x50726F7879000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH32 0x656970313936372E70726F78792E61646D696E00000000000000000000000000 DUP2 MSTORE POP PUSH1 0x13 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 SWAP1 DIV SUB PUSH1 0x1 MUL SWAP1 POP DUP1 SLOAD SWAP2 POP POP SWAP1 JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 0xe7 0x5c 0xbf DUP11 REVERT LT SGT 0xdd 0xe4 0xbe STOP PUSH15 0xA2AD2AA889FB21C0A456CFB7639AAF LOG4 0x5f 0xc8 DUP6 0xbe STOP 0x29 ",
				"sourceMap": "35:2726:10:-;;;1709:359;8:9:-1;5:2;;;30:1;27;20:12;5:2;1709:359:10;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1709:359:10;;;;;;;;;;;;;;;;1794:12;745:1;700:41;;;;;;;;;;;;;;;;;;;692:50;;;:54;675:77;;1794:34;;1874:13;1868:4;1861:27;864:1;828:32;;;;;;;;;;;;;;;;;;;820:41;;;:45;803:68;;1939:23;;1972:14;1989:10;1972:27;;2045:6;2039:4;2032:20;2018:44;;;35:2726;;;;;;"
			}
		}
	},
	"sources": {
		"TestContracts/Proxy.sol": {
			"id": 10
		}
	},
	"sourceCodes": {
		"TestContracts/Proxy.sol": "pragma solidity >=0.4.21 <0.7.0;\n\n\ncontract Proxy {\n    /* Code position in storage is\n        keccak256(\"PROXIABLE\") = \"0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7\"\n    */\n    // constructor(bytes memory constructData, address contractLogic) public {\n    //     // save the code address\n    //     assembly {\n    //         sstore(0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7, contractLogic)\n    //     }\n    //     (bool success, bytes memory _ ) = contractLogic.delegatecall(constructData); // solium-disable-line\n    //     require(success, \"Construction failed\");\n    // }\n    bytes32 internal constant IMPLEMENTATION_SLOT = bytes32(\n        uint256(keccak256(\"eip1967.proxy.implementation\")) - 1\n    );\n    bytes32 internal constant PROXY_ADMIN_SLOT = bytes32(\n        uint256(keccak256(\"eip1967.proxy.admin\")) - 1\n    );\n\n    function updateLogic(address _newLogic) public {\n        require(\n            msg.sender == getAdmin(),\n            \"Only Admin should be able to update the contracts\"\n        );\n        bytes32 slot = IMPLEMENTATION_SLOT;\n        assembly {\n            sstore(slot, _newLogic)\n        }\n    }\n\n    function getImplementation() internal view returns (address result) {\n        bytes32 slot = IMPLEMENTATION_SLOT;\n        assembly {\n            result := sload(slot)\n        }\n    }\n\n    function getAdmin() internal view returns (address result) {\n        bytes32 slot = PROXY_ADMIN_SLOT;\n        assembly {\n            result := sload(slot)\n        }\n    }\n\n    function clash() public view returns (string memory) {\n        require(msg.sender == getAdmin(), \"Only Admin, testing proxy clash\");\n        return \"Proxy\";\n    }\n\n    constructor(address contractLogic) public {\n        // save the code address\n        bytes32 slot = IMPLEMENTATION_SLOT;\n        assembly {\n            sstore(slot, contractLogic)\n        }\n        // save the proxy admin\n        slot = PROXY_ADMIN_SLOT;\n        address sender = msg.sender;\n        assembly {\n            sstore(slot, sender)\n        }\n    }\n\n    function() external payable {\n        bytes32 slot = IMPLEMENTATION_SLOT;\n        assembly {\n            let contractLogic := sload(slot)\n            calldatacopy(0x0, 0x0, calldatasize())\n            let success := delegatecall(\n                sub(gas(), 10000),\n                contractLogic,\n                0x0,\n                calldatasize(),\n                0,\n                0\n            )\n            let retSz := returndatasize()\n            returndatacopy(0, 0, retSz)\n            switch success\n                case 0 {\n                    revert(0, retSz)\n                }\n                default {\n                    return(0, retSz)\n                }\n        }\n    }\n}\n"
	},
	"sourceTreeHashHex": "0x4b5dd31f172147e362f3addc670cc4822064b34766f8c58bafa819ed1b4fb221",
	"compiler": {
		"name": "solc",
		"version": "soljson-v0.5.0+commit.1d4f565a.js",
		"settings": {
			"optimizer": {
				"enabled": false
			},
			"outputSelection": {
				"*": {
					"*": [
						"abi",
						"evm.bytecode.object"
					]
				}
			},
			"remappings": [
				"@openzeppelin/upgrades=/home/app/node_modules/@openzeppelin/upgrades",
				"@openzeppelin/contracts-ethereum-package=/home/app/node_modules/@openzeppelin/contracts-ethereum-package",
				"solidity-bytes-utils=/home/app/node_modules/solidity-bytes-utils"
			]
		}
	},
	"chains": {}
}