{
	"schemaVersion": "2.0.0",
	"contractName": "PaymentLogic",
	"compilerOutput": {
		"abi": [
			{
				"constant": true,
				"inputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"name": "lockedBalances",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "withdraw",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"components": [
							{
								"components": [
									{
										"name": "relayer",
										"type": "address"
									},
									{
										"name": "relayerFraction",
										"type": "uint256"
									},
									{
										"name": "relayerSignature",
										"type": "bytes"
									}
								],
								"name": "witnessList",
								"type": "tuple[]"
							},
							{
								"name": "signature",
								"type": "bytes"
							}
						],
						"name": "_signedWitness",
						"type": "tuple"
					},
					{
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "payForWitness",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "unlock",
				"outputs": [
					{
						"name": "",
						"type": "bytes32"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_id",
						"type": "bytes32"
					}
				],
				"name": "sealUnlockRequest",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "withdrawAll",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"name": "unlockedBalances",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "deposit",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_token",
						"type": "address"
					}
				],
				"name": "initialize",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "_witnessSignature",
						"type": "bytes"
					}
				],
				"name": "isWinning",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "unlockRequests",
				"outputs": [
					{
						"name": "sender",
						"type": "address"
					},
					{
						"name": "timestamp",
						"type": "uint256"
					},
					{
						"name": "amount",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "token",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"name": "id",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"name": "sender",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "time",
						"type": "uint256"
					},
					{
						"indexed": false,
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "UnlockRequested",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"name": "id",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"name": "changed",
						"type": "bool"
					}
				],
				"name": "UnlockRequestSealed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"name": "sender",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"name": "paid",
						"type": "bool"
					}
				],
				"name": "PayWitness",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"name": "sender",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Deposit",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"name": "sender",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"name": "withdrawn",
						"type": "bool"
					}
				],
				"name": "Withdraw",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"name": "sender",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Lock",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"name": "sender",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Unlock",
				"type": "event"
			}
		],
		"evm": {
			"bytecode": {
				"linkReferences": {},
				"object": "0x608060405234801561001057600080fd5b5061235d806100206000396000f3fe6080604052600436106100ba576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630483a7f6146100bf5780632e1a7d4d146100fc5780634467a920146101395780636198e339146101765780638227a968146101b3578063853828b6146101f05780638c8ba66d1461021b578063b6b55f2514610258578063c4d66de814610295578063d4f645e5146102be578063e7017f78146102fb578063fc0c546a1461033a575b600080fd5b3480156100cb57600080fd5b506100e660048036036100e191908101906119e2565b610365565b6040516100f3919061215c565b60405180910390f35b34801561010857600080fd5b50610123600480360361011e9190810190611af2565b61037d565b604051610130919061215c565b60405180910390f35b34801561014557600080fd5b50610160600480360361015b9190810190611a9e565b6105a8565b60405161016d9190611f7d565b60405180910390f35b34801561018257600080fd5b5061019d60048036036101989190810190611af2565b61089e565b6040516101aa9190611f98565b60405180910390f35b3480156101bf57600080fd5b506101da60048036036101d59190810190611a34565b610a4c565b6040516101e79190611f7d565b60405180910390f35b3480156101fc57600080fd5b50610205610d41565b604051610212919061215c565b60405180910390f35b34801561022757600080fd5b50610242600480360361023d91908101906119e2565b610f5e565b60405161024f919061215c565b60405180910390f35b34801561026457600080fd5b5061027f600480360361027a9190810190611af2565b610f76565b60405161028c919061215c565b60405180910390f35b3480156102a157600080fd5b506102bc60048036036102b791908101906119e2565b611334565b005b3480156102ca57600080fd5b506102e560048036036102e09190810190611a5d565b611429565b6040516102f29190611f7d565b60405180910390f35b34801561030757600080fd5b50610322600480360361031d9190810190611a34565b611505565b60405161033193929190611f46565b60405180910390f35b34801561034657600080fd5b5061034f61154f565b60405161035c9190612021565b60405180910390f35b60346020528060005260406000206000915090505481565b6000603560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515610403576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103fa906120dc565b60405180910390fd5b61045582603560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461157590919063ffffffff16565b603560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610511929190611eaf565b602060405180830381600087803b15801561052b57600080fd5b505af115801561053f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506105639190810190611a0b565b507f039d3e7ccc0d8edf3fb8206bf9f58888c4cced8c157c730a2407a54aad7c865c3383600160405161059893929190611ed8565b60405180910390a1819050919050565b600081603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015151561062e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610625906120fc565b60405180910390fd5b6000151561063f8460200151611429565b1515141561068c577fa9ee3d3b0837c85b72be39bee6cb5bbc127892448cdbb314af0cdef606d7545e3383600060405161067b93929190611ed8565b60405180910390a160009050610898565b60008090505b83600001515181101561085657610712838560000151838151811015156106b557fe5b906020019060200201516020015102603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461157590919063ffffffff16565b603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506107e78385600001518381518110151561076b57fe5b9060200190602002015160200151026035600087600001518581518110151561079057fe5b906020019060200201516000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115cd90919063ffffffff16565b603560008660000151848151811015156107fd57fe5b906020019060200201516000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508080600101915050610692565b507fa9ee3d3b0837c85b72be39bee6cb5bbc127892448cdbb314af0cdef606d7545e3383600160405161088b93929190611ed8565b60405180910390a1600190505b92915050565b600081603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515610924576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091b9061203c565b60405180910390fd5b600033428460405160200161093b93929190611f0f565b604051602081830303815290604052805190602001209050336068600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055504260686000838152602001908152602001600020600101819055506109ec8360686000848152602001908152602001600020600201546115cd90919063ffffffff16565b60686000838152602001908152602001600020600201819055507fa56c6aa3817dd7a45b826e3604a8af19b0cf38c2fed8eae421e508ad4906ea0581334286604051610a3b9493929190611fb3565b60405180910390a180915050919050565b60003373ffffffffffffffffffffffffffffffffffffffff166068600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610af4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aeb9061205c565b60405180910390fd5b42620151806068600085815260200190815260200160002060010154011115610b5a577fb676ed024e6c0465f6e523613ee0267d56bbf06535dc165889c77413fcb38166826000604051610b49929190611ff8565b60405180910390a160009050610d3c565b610bc26068600084815260200190815260200160002060020154603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461157590919063ffffffff16565b603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610c6d6068600084815260200190815260200160002060020154603560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115cd90919063ffffffff16565b603560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060686000838152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160009055600282016000905550507fb676ed024e6c0465f6e523613ee0267d56bbf06535dc165889c77413fcb38166826001604051610d2f929190611ff8565b60405180910390a1600190505b919050565b600080603560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054111515610dc6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dbd906120dc565b60405180910390fd5b6000603560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000603560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610ec8929190611eaf565b602060405180830381600087803b158015610ee257600080fd5b505af1158015610ef6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610f1a9190810190611a0b565b507f039d3e7ccc0d8edf3fb8206bf9f58888c4cced8c157c730a2407a54aad7c865c33826001604051610f4f93929190611ed8565b60405180910390a18091505090565b60356020528060005260406000206000915090505481565b600081603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610ff09190611e34565b60206040518083038186803b15801561100857600080fd5b505afa15801561101c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506110409190810190611b1b565b10151515611083576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107a9061209c565b60405180910390fd5b81603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016110fd929190611e4f565b60206040518083038186803b15801561111557600080fd5b505afa158015611129573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061114d9190810190611b1b565b10151515611190576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111879061213c565b60405180910390fd5b6111e282603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115cd90919063ffffffff16565b603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016112a093929190611e78565b602060405180830381600087803b1580156112ba57600080fd5b505af11580156112ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112f29190810190611a0b565b507fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c3383604051611324929190611eaf565b60405180910390a1819050919050565b600060019054906101000a900460ff16806113535750611352611624565b5b8061136a57506000809054906101000a900460ff16155b15156113ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113a29061211c565b60405180910390fd5b60008060019054906101000a900460ff1615905080156113fb576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6114048261163b565b80156114255760008060016101000a81548160ff0219169083151502179055505b5050565b6000807f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191682600081518110151561147f57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156114fb5760019050611500565b600090505b919050565b60686020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154905083565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008282111515156115bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115b3906120bc565b60405180910390fd5b600082840390508091505092915050565b600080828401905083811015151561161a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116119061207c565b60405180910390fd5b8091505092915050565b6000803090506000813b9050600081149250505090565b600060019054906101000a900460ff168061165a5750611659611624565b5b8061167157506000809054906101000a900460ff16155b15156116b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116a99061211c565b60405180910390fd5b60008060019054906101000a900460ff161590508015611702576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b81603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080156117645760008060016101000a81548160ff0219169083151502179055505b5050565b60006117748235612288565b905092915050565b600082601f830112151561178f57600080fd5b81356117a261179d826121a4565b612177565b9150818183526020840193506020810190508360005b838110156117e857813586016117ce8882611942565b8452602084019350602083019250506001810190506117b8565b5050505092915050565b60006117fe825161229a565b905092915050565b600061181282356122a6565b905092915050565b600082601f830112151561182d57600080fd5b813561184061183b826121cc565b612177565b9150808252602083016020830185838301111561185c57600080fd5b611867838284612314565b50505092915050565b600082601f830112151561188357600080fd5b8135611896611891826121f8565b612177565b915080825260208301602083018583830111156118b257600080fd5b6118bd838284612314565b50505092915050565b6000604082840312156118d857600080fd5b6118e26040612177565b9050600082013567ffffffffffffffff8111156118fe57600080fd5b61190a8482850161177c565b600083015250602082013567ffffffffffffffff81111561192a57600080fd5b6119368482850161181a565b60208301525092915050565b60006060828403121561195457600080fd5b61195e6060612177565b9050600061196e84828501611768565b6000830152506020611982848285016119ba565b602083015250604082013567ffffffffffffffff8111156119a257600080fd5b6119ae8482850161181a565b60408301525092915050565b60006119c682356122b0565b905092915050565b60006119da82516122b0565b905092915050565b6000602082840312156119f457600080fd5b6000611a0284828501611768565b91505092915050565b600060208284031215611a1d57600080fd5b6000611a2b848285016117f2565b91505092915050565b600060208284031215611a4657600080fd5b6000611a5484828501611806565b91505092915050565b600060208284031215611a6f57600080fd5b600082013567ffffffffffffffff811115611a8957600080fd5b611a9584828501611870565b91505092915050565b60008060408385031215611ab157600080fd5b600083013567ffffffffffffffff811115611acb57600080fd5b611ad7858286016118c6565b9250506020611ae8858286016119ba565b9150509250929050565b600060208284031215611b0457600080fd5b6000611b12848285016119ba565b91505092915050565b600060208284031215611b2d57600080fd5b6000611b3b848285016119ce565b91505092915050565b611b4d816122ba565b82525050565b611b5c81612236565b82525050565b611b6b81612224565b82525050565b611b7a81612248565b82525050565b611b8981612254565b82525050565b611b98816122cc565b82525050565b6000601c82527f416d6f756e742065786365656473206c6f636b656442616c616e6365000000006020830152604082019050919050565b6000601c82527f596f752063616e6e6f74207365616c20746869732072657175657374000000006020830152604082019050919050565b6000601b82527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006020830152604082019050919050565b6000601482527f496e73756666696369656e742062616c616e63650000000000000000000000006020830152604082019050919050565b6000601e82527f536166654d6174683a207375627472616374696f6e206f766572666c6f7700006020830152604082019050919050565b6000602782527f416d6f756e742067726561746572207468616e2074686520756e6c6f636b656460208301527f20616d6f756e74000000000000000000000000000000000000000000000000006040830152606082019050919050565b6000602782527f5573657220646f65736e2774206861766520656e6f756768206c6f636b65642060208301527f62616c616e6365000000000000000000000000000000000000000000000000006040830152606082019050919050565b6000602e82527f436f6e747261637420696e7374616e63652068617320616c726561647920626560208301527f656e20696e697469616c697a65640000000000000000000000000000000000006040830152606082019050919050565b6000603982527f54686520636f6e7472616374206973206e6f7420616c6c6f77656420746f207360208301527f70656e64206f6e207468652075736572277320626568616c66000000000000006040830152606082019050919050565b611e2e8161227e565b82525050565b6000602082019050611e496000830184611b44565b92915050565b6000604082019050611e646000830185611b44565b611e716020830184611b62565b9392505050565b6000606082019050611e8d6000830186611b44565b611e9a6020830185611b62565b611ea76040830184611e25565b949350505050565b6000604082019050611ec46000830185611b44565b611ed16020830184611e25565b9392505050565b6000606082019050611eed6000830186611b44565b611efa6020830185611e25565b611f076040830184611b71565b949350505050565b6000606082019050611f246000830186611b53565b611f316020830185611e25565b611f3e6040830184611e25565b949350505050565b6000606082019050611f5b6000830186611b62565b611f686020830185611e25565b611f756040830184611e25565b949350505050565b6000602082019050611f926000830184611b71565b92915050565b6000602082019050611fad6000830184611b80565b92915050565b6000608082019050611fc86000830187611b80565b611fd56020830186611b44565b611fe26040830185611e25565b611fef6060830184611e25565b95945050505050565b600060408201905061200d6000830185611b80565b61201a6020830184611b71565b9392505050565b60006020820190506120366000830184611b8f565b92915050565b6000602082019050818103600083015261205581611b9e565b9050919050565b6000602082019050818103600083015261207581611bd5565b9050919050565b6000602082019050818103600083015261209581611c0c565b9050919050565b600060208201905081810360008301526120b581611c43565b9050919050565b600060208201905081810360008301526120d581611c7a565b9050919050565b600060208201905081810360008301526120f581611cb1565b9050919050565b6000602082019050818103600083015261211581611d0e565b9050919050565b6000602082019050818103600083015261213581611d6b565b9050919050565b6000602082019050818103600083015261215581611dc8565b9050919050565b60006020820190506121716000830184611e25565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561219a57600080fd5b8060405250919050565b600067ffffffffffffffff8211156121bb57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff8211156121e357600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561220f57600080fd5b601f19601f8301169050602081019050919050565b600061222f8261225e565b9050919050565b60006122418261225e565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006122938261225e565b9050919050565b60008115159050919050565b6000819050919050565b6000819050919050565b60006122c5826122f0565b9050919050565b60006122d7826122de565b9050919050565b60006122e98261225e565b9050919050565b60006122fb82612302565b9050919050565b600061230d8261225e565b9050919050565b8281833760008383015250505056fea265627a7a723058204ad653c577997370cbd8223bb4f8c1f9cd0fab5dc6d1eee02a27bc79ecd37a616c6578706572696d656e74616cf50037",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x235D DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xBA JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x483A7F6 EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x4467A920 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x6198E339 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x8227A968 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x853828B6 EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x8C8BA66D EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0xD4F645E5 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0xE7017F78 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x33A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0xE1 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x19E2 JUMP JUMPDEST PUSH2 0x365 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x215C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x11E SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1AF2 JUMP JUMPDEST PUSH2 0x37D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x215C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x160 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x15B SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1A9E JUMP JUMPDEST PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x1F7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x198 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1AF2 JUMP JUMPDEST PUSH2 0x89E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x1F98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x1D5 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1A34 JUMP JUMPDEST PUSH2 0xA4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x1F7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x205 PUSH2 0xD41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x215C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x242 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x23D SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x19E2 JUMP JUMPDEST PUSH2 0xF5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x215C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x264 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x27A SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1AF2 JUMP JUMPDEST PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x215C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x2B7 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x19E2 JUMP JUMPDEST PUSH2 0x1334 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x2E0 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1A5D JUMP JUMPDEST PUSH2 0x1429 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x1F7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x31D SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1A34 JUMP JUMPDEST PUSH2 0x1505 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x331 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34F PUSH2 0x154F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35C SWAP2 SWAP1 PUSH2 0x2021 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x34 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x35 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x403 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FA SWAP1 PUSH2 0x20DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x455 DUP3 PUSH1 0x35 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1575 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x35 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x511 SWAP3 SWAP2 SWAP1 PUSH2 0x1EAF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x52B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x53F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x563 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1A0B JUMP JUMPDEST POP PUSH32 0x39D3E7CCC0D8EDF3FB8206BF9F58888C4CCED8C157C730A2407A54AAD7C865C CALLER DUP4 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x598 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1ED8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x34 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x62E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625 SWAP1 PUSH2 0x20FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH2 0x63F DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x1429 JUMP JUMPDEST ISZERO ISZERO EQ ISZERO PUSH2 0x68C JUMPI PUSH32 0xA9EE3D3B0837C85B72BE39BEE6CB5BBC127892448CDBB314AF0CDEF606D7545E CALLER DUP4 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x67B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1ED8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 SWAP1 POP PUSH2 0x898 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP4 PUSH1 0x0 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x856 JUMPI PUSH2 0x712 DUP4 DUP6 PUSH1 0x0 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x6B5 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH1 0x20 ADD MLOAD MUL PUSH1 0x34 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1575 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x34 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x7E7 DUP4 DUP6 PUSH1 0x0 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x76B JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH1 0x20 ADD MLOAD MUL PUSH1 0x35 PUSH1 0x0 DUP8 PUSH1 0x0 ADD MLOAD DUP6 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x790 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x15CD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x35 PUSH1 0x0 DUP7 PUSH1 0x0 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x7FD JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x692 JUMP JUMPDEST POP PUSH32 0xA9EE3D3B0837C85B72BE39BEE6CB5BBC127892448CDBB314AF0CDEF606D7545E CALLER DUP4 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x88B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1ED8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x34 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x924 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91B SWAP1 PUSH2 0x203C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLER TIMESTAMP DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x93B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F0F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP CALLER PUSH1 0x68 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x68 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x9EC DUP4 PUSH1 0x68 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x15CD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x68 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH32 0xA56C6AA3817DD7A45B826E3604A8AF19B0CF38C2FED8EAE421E508AD4906EA05 DUP2 CALLER TIMESTAMP DUP7 PUSH1 0x40 MLOAD PUSH2 0xA3B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x68 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xAF4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAEB SWAP1 PUSH2 0x205C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH3 0x15180 PUSH1 0x68 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD ADD GT ISZERO PUSH2 0xB5A JUMPI PUSH32 0xB676ED024E6C0465F6E523613EE0267D56BBF06535DC165889C77413FCB38166 DUP3 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0xB49 SWAP3 SWAP2 SWAP1 PUSH2 0x1FF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 SWAP1 POP PUSH2 0xD3C JUMP JUMPDEST PUSH2 0xBC2 PUSH1 0x68 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x34 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1575 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x34 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xC6D PUSH1 0x68 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x35 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x15CD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x35 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x68 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP PUSH32 0xB676ED024E6C0465F6E523613EE0267D56BBF06535DC165889C77413FCB38166 DUP3 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xD2F SWAP3 SWAP2 SWAP1 PUSH2 0x1FF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x35 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO ISZERO PUSH2 0xDC6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBD SWAP1 PUSH2 0x20DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x35 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x35 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC8 SWAP3 SWAP2 SWAP1 PUSH2 0x1EAF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEF6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0xF1A SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1A0B JUMP JUMPDEST POP PUSH32 0x39D3E7CCC0D8EDF3FB8206BF9F58888C4CCED8C157C730A2407A54AAD7C865C CALLER DUP3 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xF4F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1ED8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x35 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF0 SWAP2 SWAP1 PUSH2 0x1E34 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1008 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x101C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x1040 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1B1B JUMP JUMPDEST LT ISZERO ISZERO ISZERO PUSH2 0x1083 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x107A SWAP1 PUSH2 0x209C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10FD SWAP3 SWAP2 SWAP1 PUSH2 0x1E4F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1129 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x114D SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1B1B JUMP JUMPDEST LT ISZERO ISZERO ISZERO PUSH2 0x1190 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1187 SWAP1 PUSH2 0x213C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11E2 DUP3 PUSH1 0x34 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x15CD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x34 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E78 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x12F2 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1A0B JUMP JUMPDEST POP PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0x1324 SWAP3 SWAP2 SWAP1 PUSH2 0x1EAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1353 JUMPI POP PUSH2 0x1352 PUSH2 0x1624 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x136A JUMPI POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO ISZERO PUSH2 0x13AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13A2 SWAP1 PUSH2 0x211C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 ISZERO PUSH2 0x13FB JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x1404 DUP3 PUSH2 0x163B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1425 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000 MUL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x147F JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD ADD MLOAD PUSH32 0x100000000000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH32 0x100000000000000000000000000000000000000000000000000000000000000 MUL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ ISZERO PUSH2 0x14FB JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1500 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x68 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x15BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15B3 SWAP1 PUSH2 0x20BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x161A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1611 SWAP1 PUSH2 0x207C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 ADDRESS SWAP1 POP PUSH1 0x0 DUP2 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 EQ SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x165A JUMPI POP PUSH2 0x1659 PUSH2 0x1624 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1671 JUMPI POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO ISZERO PUSH2 0x16B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16A9 SWAP1 PUSH2 0x211C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 ISZERO PUSH2 0x1702 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP2 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1764 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1774 DUP3 CALLDATALOAD PUSH2 0x2288 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO ISZERO PUSH2 0x178F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x17A2 PUSH2 0x179D DUP3 PUSH2 0x21A4 JUMP JUMPDEST PUSH2 0x2177 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 DUP4 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17E8 JUMPI DUP2 CALLDATALOAD DUP7 ADD PUSH2 0x17CE DUP9 DUP3 PUSH2 0x1942 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x17B8 JUMP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17FE DUP3 MLOAD PUSH2 0x229A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1812 DUP3 CALLDATALOAD PUSH2 0x22A6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO ISZERO PUSH2 0x182D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1840 PUSH2 0x183B DUP3 PUSH2 0x21CC JUMP JUMPDEST PUSH2 0x2177 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP4 ADD DUP6 DUP4 DUP4 ADD GT ISZERO PUSH2 0x185C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1867 DUP4 DUP3 DUP5 PUSH2 0x2314 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO ISZERO PUSH2 0x1883 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1896 PUSH2 0x1891 DUP3 PUSH2 0x21F8 JUMP JUMPDEST PUSH2 0x2177 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP4 ADD DUP6 DUP4 DUP4 ADD GT ISZERO PUSH2 0x18B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18BD DUP4 DUP3 DUP5 PUSH2 0x2314 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18E2 PUSH1 0x40 PUSH2 0x2177 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x190A DUP5 DUP3 DUP6 ADD PUSH2 0x177C JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x192A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1936 DUP5 DUP3 DUP6 ADD PUSH2 0x181A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1954 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x195E PUSH1 0x60 PUSH2 0x2177 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x196E DUP5 DUP3 DUP6 ADD PUSH2 0x1768 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x1982 DUP5 DUP3 DUP6 ADD PUSH2 0x19BA JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19AE DUP5 DUP3 DUP6 ADD PUSH2 0x181A JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19C6 DUP3 CALLDATALOAD PUSH2 0x22B0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19DA DUP3 MLOAD PUSH2 0x22B0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1A02 DUP5 DUP3 DUP6 ADD PUSH2 0x1768 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1A2B DUP5 DUP3 DUP6 ADD PUSH2 0x17F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1A54 DUP5 DUP3 DUP6 ADD PUSH2 0x1806 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A95 DUP5 DUP3 DUP6 ADD PUSH2 0x1870 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1ACB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AD7 DUP6 DUP3 DUP7 ADD PUSH2 0x18C6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1AE8 DUP6 DUP3 DUP7 ADD PUSH2 0x19BA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B12 DUP5 DUP3 DUP6 ADD PUSH2 0x19BA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B3B DUP5 DUP3 DUP6 ADD PUSH2 0x19CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B4D DUP2 PUSH2 0x22BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1B5C DUP2 PUSH2 0x2236 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1B6B DUP2 PUSH2 0x2224 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1B7A DUP2 PUSH2 0x2248 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1B89 DUP2 PUSH2 0x2254 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1B98 DUP2 PUSH2 0x22CC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1C DUP3 MSTORE PUSH32 0x416D6F756E742065786365656473206C6F636B656442616C616E636500000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1C DUP3 MSTORE PUSH32 0x596F752063616E6E6F74207365616C2074686973207265717565737400000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1B DUP3 MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 DUP3 MSTORE PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1E DUP3 MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x27 DUP3 MSTORE PUSH32 0x416D6F756E742067726561746572207468616E2074686520756E6C6F636B6564 PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x20616D6F756E7400000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x27 DUP3 MSTORE PUSH32 0x5573657220646F65736E2774206861766520656E6F756768206C6F636B656420 PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x62616C616E636500000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2E DUP3 MSTORE PUSH32 0x436F6E747261637420696E7374616E63652068617320616C7265616479206265 PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x656E20696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x39 DUP3 MSTORE PUSH32 0x54686520636F6E7472616374206973206E6F7420616C6C6F77656420746F2073 PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x70656E64206F6E207468652075736572277320626568616C6600000000000000 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E2E DUP2 PUSH2 0x227E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E49 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B44 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E64 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1B44 JUMP JUMPDEST PUSH2 0x1E71 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B62 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1E8D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1B44 JUMP JUMPDEST PUSH2 0x1E9A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B62 JUMP JUMPDEST PUSH2 0x1EA7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1E25 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1EC4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1B44 JUMP JUMPDEST PUSH2 0x1ED1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E25 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1EED PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1B44 JUMP JUMPDEST PUSH2 0x1EFA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1E25 JUMP JUMPDEST PUSH2 0x1F07 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B71 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F24 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1B53 JUMP JUMPDEST PUSH2 0x1F31 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1E25 JUMP JUMPDEST PUSH2 0x1F3E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1E25 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F5B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1B62 JUMP JUMPDEST PUSH2 0x1F68 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1E25 JUMP JUMPDEST PUSH2 0x1F75 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1E25 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F92 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B71 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FAD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B80 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1FC8 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1B80 JUMP JUMPDEST PUSH2 0x1FD5 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1B44 JUMP JUMPDEST PUSH2 0x1FE2 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1E25 JUMP JUMPDEST PUSH2 0x1FEF PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1E25 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x200D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1B80 JUMP JUMPDEST PUSH2 0x201A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B71 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2036 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2055 DUP2 PUSH2 0x1B9E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2075 DUP2 PUSH2 0x1BD5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2095 DUP2 PUSH2 0x1C0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20B5 DUP2 PUSH2 0x1C43 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20D5 DUP2 PUSH2 0x1C7A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20F5 DUP2 PUSH2 0x1CB1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2115 DUP2 PUSH2 0x1D0E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2135 DUP2 PUSH2 0x1D6B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2155 DUP2 PUSH2 0x1DC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2171 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x219A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x21BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x21E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x220F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x222F DUP3 PUSH2 0x225E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2241 DUP3 PUSH2 0x225E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2293 DUP3 PUSH2 0x225E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22C5 DUP3 PUSH2 0x22F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22D7 DUP3 PUSH2 0x22DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22E9 DUP3 PUSH2 0x225E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22FB DUP3 PUSH2 0x2302 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x230D DUP3 PUSH2 0x225E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 0x4a 0xd6 MSTORE8 0xc5 PUSH24 0x997370CBD8223BB4F8C1F9CD0FAB5DC6D1EEE02A27BC79EC 0xd3 PUSH27 0x616C6578706572696D656E74616CF5003700000000000000000000 ",
				"sourceMap": "104:3666:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;104:3666:3;;;;;;;"
			}
		}
	},
	"sources": {
		"Payments/PaymentLogic.sol": {
			"id": 3
		},
		"Stake/StakeLogic.sol": {
			"id": 5
		},
		"Token/TokenLogic.sol": {
			"id": 7
		},
		"@openzeppelin/upgrades/contracts/Initializable.sol": {
			"id": 18
		},
		"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol": {
			"id": 13
		},
		"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol": {
			"id": 9
		},
		"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol": {
			"id": 17
		},
		"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol": {
			"id": 12
		},
		"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol": {
			"id": 15
		},
		"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol": {
			"id": 16
		},
		"@openzeppelin/contracts-ethereum-package/contracts/access/roles/MinterRole.sol": {
			"id": 11
		},
		"@openzeppelin/contracts-ethereum-package/contracts/access/Roles.sol": {
			"id": 10
		},
		"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Burnable.sol": {
			"id": 14
		}
	},
	"sourceCodes": {
		"Payments/PaymentLogic.sol": "pragma solidity >=0.4.21 <0.7.0;\npragma experimental ABIEncoderV2;\n\nimport \"../Stake/StakeLogic.sol\";\n\n\ncontract PaymentLogic is Initializable, StakeLogic {\n    struct Witness {\n        address relayer; // peer.publicKey (in DATA.md)\n        uint256 relayerFraction; // relayerFraction (in DATA.md)\n        bytes relayerSignature; // self.privKey (in DATA.md)\n    }\n\n    struct SignedWitness {\n        Witness[] witnessList;\n        bytes signature;\n    }\n\n    struct Details {\n        address sender;\n        uint256 timestamp;\n        uint256 amount;\n    }\n\n    mapping(bytes32 => Details) public unlockRequests; // bytes32 => (sender, timestamp, amount)\n\n    event UnlockRequested(\n        bytes32 id,\n        address sender,\n        uint256 time,\n        uint256 amount\n    );\n\n    event UnlockRequestSealed(bytes32 id, bool changed);\n\n    function initialize(address _token) public initializer {\n        StakeLogic.initialize(_token);\n    }\n\n    function unlock(uint256 _amount) public returns (bytes32) {\n        require(\n            lockedBalances[msg.sender] >= _amount,\n            \"Amount exceeds lockedBalance\"\n        );\n        bytes32 hash = keccak256(\n            // solhint-disable-next-line not-rely-on-time\n            abi.encode(msg.sender, block.timestamp, _amount)\n        );\n        unlockRequests[hash].sender = msg.sender;\n        // solhint-disable-next-line not-rely-on-time\n        unlockRequests[hash].timestamp = block.timestamp;\n        unlockRequests[hash].amount = unlockRequests[hash].amount.add(_amount);\n        // solhint-disable-next-line not-rely-on-time\n        emit UnlockRequested(hash, msg.sender, block.timestamp, _amount);\n        return hash;\n    }\n\n    function sealUnlockRequest(bytes32 _id) public returns (bool) {\n        require(\n            unlockRequests[_id].sender == msg.sender,\n            \"You cannot seal this request\"\n        );\n        // solhint-disable-next-line not-rely-on-time\n        if (unlockRequests[_id].timestamp + 86400 > block.timestamp) {\n            emit UnlockRequestSealed(_id, false);\n            return false;\n        }\n\n        lockedBalances[msg.sender] = lockedBalances[msg.sender].sub(\n            unlockRequests[_id].amount\n        );\n        unlockedBalances[msg.sender] = unlockedBalances[msg.sender].add(\n            unlockRequests[_id].amount\n        );\n        delete (unlockRequests[_id]);\n        emit UnlockRequestSealed(_id, true);\n        return true;\n    }\n\n    event PayWitness(address sender, uint256 amount, bool paid);\n\n    function isWinning(bytes memory _witnessSignature)\n        public\n        pure\n        returns (bool)\n    {\n        if (bytes1(_witnessSignature[0]) == bytes1(0)) {\n            return (true);\n        }\n        return (false);\n    }\n\n    function payForWitness(SignedWitness memory _signedWitness, uint256 _amount)\n        public\n        returns (bool)\n    {\n        require(\n            lockedBalances[msg.sender] >= _amount,\n            \"User doesn't have enough locked balance\"\n        );\n\n        if (isWinning(_signedWitness.signature) == false) {\n            emit PayWitness(msg.sender, _amount, false);\n            return false;\n        }\n\n        for (uint256 i = 0; i < _signedWitness.witnessList.length; i++) {\n            lockedBalances[msg.sender] = lockedBalances[msg.sender].sub(\n                _signedWitness.witnessList[i].relayerFraction * _amount\n            );\n\n            unlockedBalances[_signedWitness.witnessList[i]\n                .relayer] = unlockedBalances[_signedWitness.witnessList[i]\n                .relayer]\n                .add(_signedWitness.witnessList[i].relayerFraction * _amount);\n        }\n\n        emit PayWitness(msg.sender, _amount, true);\n        return true;\n    }\n\n    uint256[50] private ______gap;\n}\n",
		"Stake/StakeLogic.sol": "// this contract will hold all tokens\n\npragma solidity >=0.4.21 <0.7.0;\n\nimport \"../Token/TokenLogic.sol\";\n\ncontract StakeLogic is Initializable {\n    using SafeMath for uint256;\n    TokenLogic public token;\n\n    mapping(address => uint256) public lockedBalances;\n    mapping(address => uint256) public unlockedBalances;\n\n    event Deposit(address sender, uint256 amount);\n    // We don't need bool withdrawn\n    event Withdraw(address sender, uint256 amount, bool withdrawn);\n    event Lock(address sender, uint256 amount);\n    event Unlock(address sender, uint256 amount);\n\n    function initialize(address _token) public initializer {\n        token = TokenLogic(_token);\n    }\n\n    function deposit(uint256 _amount) public returns (uint256) {\n        require(token.balanceOf(msg.sender) >= _amount, \"Insufficient balance\");\n        require(\n            token.allowance(msg.sender, address(this)) >= _amount,\n            \"The contract is not allowed to spend on the user's behalf\"\n        );\n        lockedBalances[msg.sender] = lockedBalances[msg.sender].add(_amount);\n        token.transferFrom(msg.sender, address(this), _amount);\n        emit Deposit(msg.sender, _amount);\n        return _amount;\n    }\n\n    function withdraw(uint256 _amount) public returns (uint256) {\n        require(\n            _amount <= unlockedBalances[msg.sender],\n            \"Amount greater than the unlocked amount\"\n        );\n        unlockedBalances[msg.sender] = unlockedBalances[msg.sender].sub(\n            _amount\n        );\n        token.transfer(msg.sender, _amount);\n        emit Withdraw(msg.sender, _amount, true);\n        return _amount;\n    }\n\n    function withdrawAll() public returns (uint256) {\n        require(\n            unlockedBalances[msg.sender] > 0,\n            \"Amount greater than the unlocked amount\"\n        );\n        uint256 amount = unlockedBalances[msg.sender];\n        unlockedBalances[msg.sender] = 0;\n        token.transfer(msg.sender, amount);\n        emit Withdraw(msg.sender, amount, true);\n        return amount;\n    }\n\n    function lockBalance(uint256 _amount) private returns (bool) {\n        require(\n            _amount <= unlockedBalances[msg.sender],\n            \"Amount greater than the unlocked amount\"\n        );\n        unlockedBalances[msg.sender] = unlockedBalances[msg.sender].sub(\n            _amount\n        );\n        lockedBalances[msg.sender] = lockedBalances[msg.sender].add(_amount);\n        emit Lock(msg.sender, _amount);\n        return true;\n    }\n\n    function unlockBalance(uint256 _amount) private returns (bool) {\n        require(\n            _amount <= unlockedBalances[msg.sender],\n            \"Amount greater than the unlocked amount\"\n        );\n        lockedBalances[msg.sender] = lockedBalances[msg.sender].sub(_amount);\n        unlockedBalances[msg.sender] = unlockedBalances[msg.sender].add(\n            _amount\n        );\n        emit Unlock(msg.sender, _amount);\n        return true;\n    }\n\n    function slashStake(\n        address _duplicateStakeAddress,\n        address _submitterWithdrawAddress,\n        uint256 _amountToBeSlashed,\n        uint256 _percentTransfer\n    ) internal returns (bool) {\n        require(\n            lockedBalances[_duplicateStakeAddress] >= _amountToBeSlashed,\n            \"Amount to be slashed must be less than available balance\"\n        );\n        // lockedBalances[_duplicateStakeAddress] = lockedBalances[_duplicateStakeAddress].add(_amountToBeSlashed);\n        lockedBalances[_duplicateStakeAddress] = lockedBalances[_duplicateStakeAddress]\n            .sub(_amountToBeSlashed);\n        unlockedBalances[_submitterWithdrawAddress] = (\n            unlockedBalances[_submitterWithdrawAddress].add(\n                _amountToBeSlashed.mul(_percentTransfer).div(100)\n            )\n        );\n        return true;\n    }\n\n    uint256[50] private ______gap;\n}\n",
		"Token/TokenLogic.sol": "pragma solidity >=0.4.21 <0.7.0;\n\nimport \"@openzeppelin/upgrades/contracts/Initializable.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Burnable.sol\";\n\n\ncontract TokenLogic is\n    Initializable,\n    ERC20,\n    ERC20Detailed,\n    ERC20Mintable,\n    ERC20Burnable\n{\n    function initialize(\n        string memory _name,\n        string memory _symbol,\n        uint8 _decimal\n    ) public initializer {\n        ERC20Detailed.initialize(_name, _symbol, _decimal);\n        ERC20Mintable.initialize(msg.sender);\n    }\n}\n",
		"@openzeppelin/upgrades/contracts/Initializable.sol": "pragma solidity >=0.4.24 <0.7.0;\n\n\n/**\n * @title Initializable\n *\n * @dev Helper contract to support initializer functions. To use it, replace\n * the constructor with a function that has the `initializer` modifier.\n * WARNING: Unlike constructors, initializer functions must be manually\n * invoked. This applies both to deploying an Initializable contract, as well\n * as extending an Initializable contract via inheritance.\n * WARNING: When used with inheritance, manual care must be taken to not invoke\n * a parent initializer twice, or ensure that all initializers are idempotent,\n * because this is not dealt with automatically as with constructors.\n */\ncontract Initializable {\n\n  /**\n   * @dev Indicates that the contract has been initialized.\n   */\n  bool private initialized;\n\n  /**\n   * @dev Indicates that the contract is in the process of being initialized.\n   */\n  bool private initializing;\n\n  /**\n   * @dev Modifier to use in the initializer function of a contract.\n   */\n  modifier initializer() {\n    require(initializing || isConstructor() || !initialized, \"Contract instance has already been initialized\");\n\n    bool isTopLevelCall = !initializing;\n    if (isTopLevelCall) {\n      initializing = true;\n      initialized = true;\n    }\n\n    _;\n\n    if (isTopLevelCall) {\n      initializing = false;\n    }\n  }\n\n  /// @dev Returns true if and only if the function is running in the constructor\n  function isConstructor() private view returns (bool) {\n    // extcodesize checks the size of the code stored in an address, and\n    // address returns the current address. Since the code is still not\n    // deployed when running a constructor, any checks on its code size will\n    // yield zero, making it an effective way to detect if a contract is\n    // under construction or not.\n    address self = address(this);\n    uint256 cs;\n    assembly { cs := extcodesize(self) }\n    return cs == 0;\n  }\n\n  // Reserved storage space to allow for layout changes in the future.\n  uint256[50] private ______gap;\n}\n",
		"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol": "pragma solidity ^0.5.0;\n\nimport \"@openzeppelin/upgrades/contracts/Initializable.sol\";\n\nimport \"../../GSN/Context.sol\";\nimport \"./IERC20.sol\";\nimport \"../../math/SafeMath.sol\";\n\n/**\n * @dev Implementation of the `IERC20` interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using `_mint`.\n * For a generic mechanism see `ERC20Mintable`.\n *\n * *For a detailed writeup see our guide [How to implement supply\n * mechanisms](https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226).*\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an `Approval` event is emitted on calls to `transferFrom`.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard `decreaseAllowance` and `increaseAllowance`\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See `IERC20.approve`.\n */\ncontract ERC20 is Initializable, Context, IERC20 {\n    using SafeMath for uint256;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    /**\n     * @dev See `IERC20.totalSupply`.\n     */\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See `IERC20.balanceOf`.\n     */\n    function balanceOf(address account) public view returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See `IERC20.transfer`.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 value) public returns (bool) {\n        _transfer(_msgSender(), to, value);\n        return true;\n    }\n\n    /**\n     * @dev See `IERC20.allowance`.\n     */\n    function allowance(address owner, address spender) public view returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See `IERC20.approve`.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public returns (bool) {\n        _approve(_msgSender(), spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See `IERC20.transferFrom`.\n     *\n     * Emits an `Approval` event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of `ERC20`;\n     *\n     * Requirements:\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `value`.\n     * - the caller must have allowance for `sender`'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 value) public returns (bool) {\n        _transfer(from, to, value);\n        _approve(from, _msgSender(), _allowances[from][_msgSender()].sub(value));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to `approve` that can be used as a mitigation for\n     * problems described in `IERC20.approve`.\n     *\n     * Emits an `Approval` event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to `approve` that can be used as a mitigation for\n     * problems described in `IERC20.approve`.\n     *\n     * Emits an `Approval` event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to `transfer`, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a `Transfer` event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _balances[sender] = _balances[sender].sub(amount);\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a `Transfer` event with `from` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n     /**\n     * @dev Destoys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a `Transfer` event with `to` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 value) internal {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _totalSupply = _totalSupply.sub(value);\n        _balances[account] = _balances[account].sub(value);\n        emit Transfer(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     *\n     * This is internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an `Approval` event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }\n\n    /**\n     * @dev Destoys `amount` tokens from `account`.`amount` is then deducted\n     * from the caller's allowance.\n     *\n     * See `_burn` and `_approve`.\n     */\n    function _burnFrom(address account, uint256 amount) internal {\n        _burn(account, amount);\n        _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount));\n    }\n\n    uint256[50] private ______gap;\n}\n",
		"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol": "pragma solidity ^0.5.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they not should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\ncontract Context {\n    // Empty internal constructor, to prevent people from mistakenly deploying\n    // an instance of this contract, with should be used via inheritance.\n    constructor () internal { }\n    // solhint-disable-previous-line no-empty-blocks\n\n    function _msgSender() internal view returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n",
		"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol": "pragma solidity ^0.5.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\n * the optional functions; to access them see `ERC20Detailed`.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a `Transfer` event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through `transferFrom`. This is\n     * zero by default.\n     *\n     * This value changes when `approve` or `transferFrom` are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * > Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an `Approval` event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a `Transfer` event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to `approve`. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n",
		"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol": "pragma solidity ^0.5.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0, \"SafeMath: division by zero\");\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n}\n",
		"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol": "pragma solidity ^0.5.0;\n\nimport \"@openzeppelin/upgrades/contracts/Initializable.sol\";\nimport \"./IERC20.sol\";\n\n/**\n * @dev Optional functions from the ERC20 standard.\n */\ncontract ERC20Detailed is Initializable, IERC20 {\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    /**\n     * @dev Sets the values for `name`, `symbol`, and `decimals`. All three of\n     * these values are immutable: they can only be set once during\n     * construction.\n     */\n    function initialize(string memory name, string memory symbol, uint8 decimals) public initializer {\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei.\n     *\n     * > Note that this information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * `IERC20.balanceOf` and `IERC20.transfer`.\n     */\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n\n    uint256[50] private ______gap;\n}\n",
		"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol": "pragma solidity ^0.5.0;\n\nimport \"@openzeppelin/upgrades/contracts/Initializable.sol\";\nimport \"./ERC20.sol\";\nimport \"../../access/roles/MinterRole.sol\";\n\n/**\n * @dev Extension of `ERC20` that adds a set of accounts with the `MinterRole`,\n * which have permission to mint (create) new tokens as they see fit.\n *\n * At construction, the deployer of the contract is the only minter.\n */\ncontract ERC20Mintable is Initializable, ERC20, MinterRole {\n    function initialize(address sender) public initializer {\n        MinterRole.initialize(sender);\n    }\n\n    /**\n     * @dev See `ERC20._mint`.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `MinterRole`.\n     */\n    function mint(address account, uint256 amount) public onlyMinter returns (bool) {\n        _mint(account, amount);\n        return true;\n    }\n\n    uint256[50] private ______gap;\n}\n",
		"@openzeppelin/contracts-ethereum-package/contracts/access/roles/MinterRole.sol": "pragma solidity ^0.5.0;\n\nimport \"@openzeppelin/upgrades/contracts/Initializable.sol\";\n\nimport \"../../GSN/Context.sol\";\nimport \"../Roles.sol\";\n\ncontract MinterRole is Initializable, Context {\n    using Roles for Roles.Role;\n\n    event MinterAdded(address indexed account);\n    event MinterRemoved(address indexed account);\n\n    Roles.Role private _minters;\n\n    function initialize(address sender) public initializer {\n        if (!isMinter(sender)) {\n            _addMinter(sender);\n        }\n    }\n\n    modifier onlyMinter() {\n        require(isMinter(_msgSender()), \"MinterRole: caller does not have the Minter role\");\n        _;\n    }\n\n    function isMinter(address account) public view returns (bool) {\n        return _minters.has(account);\n    }\n\n    function addMinter(address account) public onlyMinter {\n        _addMinter(account);\n    }\n\n    function renounceMinter() public {\n        _removeMinter(_msgSender());\n    }\n\n    function _addMinter(address account) internal {\n        _minters.add(account);\n        emit MinterAdded(account);\n    }\n\n    function _removeMinter(address account) internal {\n        _minters.remove(account);\n        emit MinterRemoved(account);\n    }\n\n    uint256[50] private ______gap;\n}\n",
		"@openzeppelin/contracts-ethereum-package/contracts/access/Roles.sol": "pragma solidity ^0.5.0;\n\n/**\n * @title Roles\n * @dev Library for managing addresses assigned to a Role.\n */\nlibrary Roles {\n    struct Role {\n        mapping (address => bool) bearer;\n    }\n\n    /**\n     * @dev Give an account access to this role.\n     */\n    function add(Role storage role, address account) internal {\n        require(!has(role, account), \"Roles: account already has role\");\n        role.bearer[account] = true;\n    }\n\n    /**\n     * @dev Remove an account's access to this role.\n     */\n    function remove(Role storage role, address account) internal {\n        require(has(role, account), \"Roles: account does not have role\");\n        role.bearer[account] = false;\n    }\n\n    /**\n     * @dev Check if an account has this role.\n     * @return bool\n     */\n    function has(Role storage role, address account) internal view returns (bool) {\n        require(account != address(0), \"Roles: account is the zero address\");\n        return role.bearer[account];\n    }\n}\n",
		"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Burnable.sol": "pragma solidity ^0.5.0;\n\nimport \"@openzeppelin/upgrades/contracts/Initializable.sol\";\n\nimport \"../../GSN/Context.sol\";\nimport \"./ERC20.sol\";\n\n/**\n * @dev Extension of `ERC20` that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\ncontract ERC20Burnable is Initializable, Context, ERC20 {\n    /**\n     * @dev Destoys `amount` tokens from the caller.\n     *\n     * See `ERC20._burn`.\n     */\n    function burn(uint256 amount) public {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev See `ERC20._burnFrom`.\n     */\n    function burnFrom(address account, uint256 amount) public {\n        _burnFrom(account, amount);\n    }\n\n    uint256[50] private ______gap;\n}\n"
	},
	"sourceTreeHashHex": "0x4696537d68f27982b3b5bb03c8cd60d3aab18bdfa3d37d3d9002b689f707bdfe",
	"compiler": {
		"name": "solc",
		"version": "soljson-v0.5.0+commit.1d4f565a.js",
		"settings": {
			"optimizer": {
				"enabled": false
			},
			"outputSelection": {
				"*": {
					"*": [
						"abi",
						"evm.bytecode.object"
					]
				}
			},
			"remappings": [
				"@openzeppelin/upgrades=/home/app/node_modules/@openzeppelin/upgrades",
				"@openzeppelin/contracts-ethereum-package=/home/app/node_modules/@openzeppelin/contracts-ethereum-package",
				"solidity-bytes-utils=/home/app/node_modules/solidity-bytes-utils"
			]
		}
	},
	"chains": {}
}