{
  "contractName": "ERC20Burnable",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        },
        {
          "name": "recipient",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "recipient",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller.     * See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"See {ERC20-_burnFrom}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/app/contracts/vendor/openzeppelin/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"/home/app/contracts/vendor/openzeppelin/Context.sol\":{\"keccak256\":\"0x3b8f02a00714eb9fccd38a7e57b2fc450654f601ea22a0f9739d1e767760114d\",\"urls\":[\"bzzr://6f2a9b2324db2fd78ed716cba682050821b2bc659e54c7d8619d365cb02ce222\"]},\"/home/app/contracts/vendor/openzeppelin/ERC20.sol\":{\"keccak256\":\"0xb23860158bb29ad4cb51f837e99a6ed37bd91e81b105843c57c162c019372ccb\",\"urls\":[\"bzzr://9e6c72563b75091c4e4996b1f83e45c8c9590afd5d2e43720d3d62cb9581cf9a\"]},\"/home/app/contracts/vendor/openzeppelin/ERC20Burnable.sol\":{\"keccak256\":\"0xe478ceb2a8917c4a3374a08f5d9e071a1bd6a7da83608fcb7c3c192f130adbcf\",\"urls\":[\"bzzr://d60910bad5687e7dfd59a2ddbbd279b055cb8180e27764ada520aed46871baa7\"]},\"/home/app/contracts/vendor/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x8b0e4940d7d98d225232d3ab750680855214d38e1b487949e27dd1b2fad2646a\",\"urls\":[\"bzzr://e35e3363af03ba23d6d33c22abae69556792cfbc4f2ade607c99e299f5c49458\"]},\"/home/app/contracts/vendor/openzeppelin/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzzr://f75d88b16fe25a9e19b3512691c496e2bb6d8451bc9a636196c4e17ca9b40201\"]},\"/home/app/contracts/vendor/openzeppelin/SafeMath.sol\":{\"keccak256\":\"0x28b6b33f66648b15134656462ad593c8944fa34aab3fceea2da848b510fe7f48\",\"urls\":[\"bzzr://ca5e02dfbf0398f2ed2de526df38572150d19316062813e4d7fee9aa35774470\"]}},\"version\":1}",
  "bytecode": "0x6080604052610ea3806100136000396000f3fe6080604052600436106100a35763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663095ea7b381146100a857806318160ddd1461010257806323b872dd14610129578063395093511461017957806342966c68146101bf57806370a08231146101eb57806379cc67901461022b578063a457c2d714610271578063a9059cbb146102b7578063dd62ed3e146102fd575b600080fd5b3480156100b457600080fd5b506100ee600480360360408110156100cb57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610345565b604080519115158252519081900360200190f35b34801561010e57600080fd5b50610117610362565b60408051918252519081900360200190f35b34801561013557600080fd5b506100ee6004803603606081101561014c57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060400135610368565b34801561018557600080fd5b506100ee6004803603604081101561019c57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561046e565b3480156101cb57600080fd5b506101e9600480360360208110156101e257600080fd5b50356104cf565b005b3480156101f757600080fd5b506101176004803603602081101561020e57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166104e3565b34801561023757600080fd5b506101e96004803603604081101561024e57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561050b565b34801561027d57600080fd5b506100ee6004803603604081101561029457600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610519565b3480156102c357600080fd5b506100ee600480360360408110156102da57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356105d8565b34801561030957600080fd5b506101176004803603604081101561032057600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160200135166105ec565b6000610359610352610624565b8484610628565b50600192915050565b60355490565b60006103758484846107ea565b61046484610381610624565b61045f85606060405190810160405280602881526020017f45524332303a207472616e7366657220616d6f756e742065786365656473206181526020017f6c6c6f77616e6365000000000000000000000000000000000000000000000000815250603460008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061042b610624565b73ffffffffffffffffffffffffffffffffffffffff168152602081019190915260400160002054919063ffffffff610a7d16565b610628565b5060019392505050565b600061035961047b610624565b8461045f856034600061048c610624565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610b2e16565b6104e06104da610624565b82610ba9565b50565b73ffffffffffffffffffffffffffffffffffffffff1660009081526033602052604090205490565b6105158282610d75565b5050565b6000610359610526610624565b8461045f85606060405190810160405280602581526020017f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7781526020017f207a65726f00000000000000000000000000000000000000000000000000000081525060346000610594610624565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff610a7d16565b60006103596105e5610624565b84846107ea565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260346020908152604080832093909416825291909152205490565b3390565b73ffffffffffffffffffffffffffffffffffffffff831615156106d157604080517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b73ffffffffffffffffffffffffffffffffffffffff8216151561077b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b73ffffffffffffffffffffffffffffffffffffffff808416600081815260346020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b73ffffffffffffffffffffffffffffffffffffffff8316151561089457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b73ffffffffffffffffffffffffffffffffffffffff8216151561093e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b60408051606081018252602681527f45524332303a207472616e7366657220616d6f756e74206578636565647320626020808301919091527f616c616e636500000000000000000000000000000000000000000000000000008284015273ffffffffffffffffffffffffffffffffffffffff86166000908152603390915291909120546109d291839063ffffffff610a7d16565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152603360205260408082209390935590841681522054610a14908263ffffffff610b2e16565b73ffffffffffffffffffffffffffffffffffffffff80841660008181526033602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610b26576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610aeb578181015183820152602001610ad3565b50505050905090810190601f168015610b185780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610ba257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b73ffffffffffffffffffffffffffffffffffffffff82161515610c5357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f7300000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b60408051606081018252602281527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e6020808301919091527f63650000000000000000000000000000000000000000000000000000000000008284015273ffffffffffffffffffffffffffffffffffffffff8516600090815260339091529190912054610ce791839063ffffffff610a7d16565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260336020526040902055603554610d20908263ffffffff610e3516565b60355560408051828152905160009173ffffffffffffffffffffffffffffffffffffffff8516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b610d7f8282610ba9565b61051582610d8b610624565b61045f84606060405190810160405280602481526020017f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f7781526020017f616e636500000000000000000000000000000000000000000000000000000000815250603460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061042b610624565b6000610ba283836040805190810160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610a7d56fea165627a7a72305820ccf027ea77870b0a62deea9ad1628881937f04c1c2977dd88d7cdeae9bc685280029",
  "deployedBytecode": "0x6080604052600436106100a35763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663095ea7b381146100a857806318160ddd1461010257806323b872dd14610129578063395093511461017957806342966c68146101bf57806370a08231146101eb57806379cc67901461022b578063a457c2d714610271578063a9059cbb146102b7578063dd62ed3e146102fd575b600080fd5b3480156100b457600080fd5b506100ee600480360360408110156100cb57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610345565b604080519115158252519081900360200190f35b34801561010e57600080fd5b50610117610362565b60408051918252519081900360200190f35b34801561013557600080fd5b506100ee6004803603606081101561014c57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060400135610368565b34801561018557600080fd5b506100ee6004803603604081101561019c57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561046e565b3480156101cb57600080fd5b506101e9600480360360208110156101e257600080fd5b50356104cf565b005b3480156101f757600080fd5b506101176004803603602081101561020e57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166104e3565b34801561023757600080fd5b506101e96004803603604081101561024e57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561050b565b34801561027d57600080fd5b506100ee6004803603604081101561029457600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610519565b3480156102c357600080fd5b506100ee600480360360408110156102da57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356105d8565b34801561030957600080fd5b506101176004803603604081101561032057600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160200135166105ec565b6000610359610352610624565b8484610628565b50600192915050565b60355490565b60006103758484846107ea565b61046484610381610624565b61045f85606060405190810160405280602881526020017f45524332303a207472616e7366657220616d6f756e742065786365656473206181526020017f6c6c6f77616e6365000000000000000000000000000000000000000000000000815250603460008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061042b610624565b73ffffffffffffffffffffffffffffffffffffffff168152602081019190915260400160002054919063ffffffff610a7d16565b610628565b5060019392505050565b600061035961047b610624565b8461045f856034600061048c610624565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610b2e16565b6104e06104da610624565b82610ba9565b50565b73ffffffffffffffffffffffffffffffffffffffff1660009081526033602052604090205490565b6105158282610d75565b5050565b6000610359610526610624565b8461045f85606060405190810160405280602581526020017f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7781526020017f207a65726f00000000000000000000000000000000000000000000000000000081525060346000610594610624565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff610a7d16565b60006103596105e5610624565b84846107ea565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260346020908152604080832093909416825291909152205490565b3390565b73ffffffffffffffffffffffffffffffffffffffff831615156106d157604080517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b73ffffffffffffffffffffffffffffffffffffffff8216151561077b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b73ffffffffffffffffffffffffffffffffffffffff808416600081815260346020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b73ffffffffffffffffffffffffffffffffffffffff8316151561089457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b73ffffffffffffffffffffffffffffffffffffffff8216151561093e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b60408051606081018252602681527f45524332303a207472616e7366657220616d6f756e74206578636565647320626020808301919091527f616c616e636500000000000000000000000000000000000000000000000000008284015273ffffffffffffffffffffffffffffffffffffffff86166000908152603390915291909120546109d291839063ffffffff610a7d16565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152603360205260408082209390935590841681522054610a14908263ffffffff610b2e16565b73ffffffffffffffffffffffffffffffffffffffff80841660008181526033602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610b26576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610aeb578181015183820152602001610ad3565b50505050905090810190601f168015610b185780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610ba257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b73ffffffffffffffffffffffffffffffffffffffff82161515610c5357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f7300000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b60408051606081018252602281527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e6020808301919091527f63650000000000000000000000000000000000000000000000000000000000008284015273ffffffffffffffffffffffffffffffffffffffff8516600090815260339091529190912054610ce791839063ffffffff610a7d16565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260336020526040902055603554610d20908263ffffffff610e3516565b60355560408051828152905160009173ffffffffffffffffffffffffffffffffffffffff8516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b610d7f8282610ba9565b61051582610d8b610624565b61045f84606060405190810160405280602481526020017f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f7781526020017f616e636500000000000000000000000000000000000000000000000000000000815250603460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061042b610624565b6000610ba283836040805190810160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610a7d56fea165627a7a72305820ccf027ea77870b0a62deea9ad1628881937f04c1c2977dd88d7cdeae9bc685280029",
  "sourceMap": "321:442:15:-;;;;;;;;;",
  "deployedSourceMap": "321:442:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2538:149:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2538:149:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2538:149:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;1597:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1597:89:14;;;;;;;;;;;;;;;;;;;;3145:300;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3145:300:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3145:300:14;;;;;;;;;;;;;;;;;;;3840:207;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3840:207:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3840:207:14;;;;;;;;;;486:81:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;486:81:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;486:81:15;;;;;1744:108:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1744:108:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1744:108:14;;;;;624:101:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;624:101:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;624:101:15;;;;;;;;;;4534:258:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4534:258:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4534:258:14;;;;;;;;;;2055:155;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2055:155:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2055:155:14;;;;;;;;;;2268:132;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2268:132:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2268:132:14;;;;;;;;;;;;2538:149;2604:4;2620:39;2629:12;:10;:12::i;:::-;2643:7;2652:6;2620:8;:39::i;:::-;-1:-1:-1;2676:4:14;2538:149;;;;:::o;1597:89::-;1667:12;;1597:89;:::o;3145:300::-;3234:4;3250:36;3260:6;3268:9;3279:6;3250:9;:36::i;:::-;3296:121;3305:6;3313:12;:10;:12::i;:::-;3327:89;3365:6;3327:89;;;;;;;;;;;;;;;;;;;;;;;:11;:19;3339:6;3327:19;;;;;;;;;;;;;;;:33;3347:12;:10;:12::i;:::-;3327:33;;;;;;;;;;;;;-1:-1:-1;3327:33:14;;;:89;;:37;:89;:::i;:::-;3296:8;:121::i;:::-;-1:-1:-1;3434:4:14;3145:300;;;;;:::o;3840:207::-;3920:4;3936:83;3945:12;:10;:12::i;:::-;3959:7;3968:50;4007:10;3968:11;:25;3980:12;:10;:12::i;:::-;3968:25;;;;;;;;;;;;;;;;;;-1:-1:-1;3968:25:14;;;:34;;;;;;;;;;;:50;:38;:50;:::i;486:81:15:-;533:27;539:12;:10;:12::i;:::-;553:6;533:5;:27::i;:::-;486:81;:::o;1744:108:14:-;1827:18;;1801:7;1827:18;;;:9;:18;;;;;;;1744:108::o;624:101:15:-;692:26;702:7;711:6;692:9;:26::i;:::-;624:101;;:::o;4534:258:14:-;4619:4;4635:129;4644:12;:10;:12::i;:::-;4658:7;4667:96;4706:15;4667:96;;;;;;;;;;;;;;;;;;;;;;;:11;:25;4679:12;:10;:12::i;:::-;4667:25;;;;;;;;;;;;;;;;;;-1:-1:-1;4667:25:14;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;2055:155::-;2124:4;2140:42;2150:12;:10;:12::i;:::-;2164:9;2175:6;2140:9;:42::i;2268:132::-;2366:18;;;;2340:7;2366:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2268:132::o;845:96:13:-;924:10;845:96;:::o;7388:332:14:-;7481:19;;;;;7473:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7559:21;;;;;7551:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7630:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;7681:32;;;;;;;;;;;;;;;;;7388:332;;;:::o;5266:464::-;5363:20;;;;;5355:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5443:23;;;;;5435:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5537;;;;;;;;;;;;;;;;;;;;;;;;;:17;;;-1:-1:-1;5537:17:14;;;:9;:17;;;;;;;;:71;;5559:6;;5537:71;:21;:71;:::i;:::-;5517:17;;;;;;;;:9;:17;;;;;;:91;;;;5641:20;;;;;;;:32;;5666:6;5641:32;:24;:32;:::i;:::-;5618:20;;;;;;;;:9;:20;;;;;;;;;:55;;;;5688:35;;;;;;;5618:20;;5688:35;;;;;;;;;;;;;5266:464;;;:::o;1741:187:21:-;1827:7;1862:12;1854:6;;;;1846:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1846:29:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1897:5:21;;;1741:187::o;843:176::-;901:7;932:5;;;955:6;;;;947:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1011:1;843:176;-1:-1:-1;;;843:176:21:o;6621:342:14:-;6696:21;;;;;6688:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6787:68;;;;;;;;;;;;;;;;;;;;;;;;;:18;;;-1:-1:-1;6787:18:14;;;:9;:18;;;;;;;;:68;;6810:6;;6787:68;:22;:68;:::i;:::-;6766:18;;;;;;;:9;:18;;;;;:89;6880:12;;:24;;6897:6;6880:24;:16;:24;:::i;:::-;6865:12;:39;6919:37;;;;;;;;6945:1;;6919:37;;;;;;;;;;;;;6621:342;;:::o;7898:229::-;7969:22;7975:7;7984:6;7969:5;:22::i;:::-;8001:119;8010:7;8019:12;:10;:12::i;:::-;8033:86;8072:6;8033:86;;;;;;;;;;;;;;;;;;;;;;;:11;:20;8045:7;8033:20;;;;;;;;;;;;;;;:34;8054:12;:10;:12::i;1283:134:21:-;1341:7;1367:43;1371:1;1374;1367:43;;;;;;;;;;;;;;;;;;:3;:43::i",
  "source": "pragma solidity >=0.4.21 <0.7.0;\n\nimport \"./Initializable.sol\";\n\nimport \"./Context.sol\";\nimport \"./ERC20.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\ncontract ERC20Burnable is Initializable, Context, ERC20 {\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev See {ERC20-_burnFrom}.\n     */\n    function burnFrom(address account, uint256 amount) public {\n        _burnFrom(account, amount);\n    }\n\n    uint256[50] private ______gap;\n}",
  "sourcePath": "/home/app/contracts/vendor/openzeppelin/ERC20Burnable.sol",
  "ast": {
    "absolutePath": "/home/app/contracts/vendor/openzeppelin/ERC20Burnable.sol",
    "exportedSymbols": {
      "ERC20Burnable": [
        2603
      ]
    },
    "id": 2604,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2564,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:15"
      },
      {
        "absolutePath": "/home/app/contracts/vendor/openzeppelin/Initializable.sol",
        "file": "./Initializable.sol",
        "id": 2565,
        "nodeType": "ImportDirective",
        "scope": 2604,
        "sourceUnit": 2858,
        "src": "34:29:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/app/contracts/vendor/openzeppelin/Context.sol",
        "file": "./Context.sol",
        "id": 2566,
        "nodeType": "ImportDirective",
        "scope": 2604,
        "sourceUnit": 2151,
        "src": "65:23:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/app/contracts/vendor/openzeppelin/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 2567,
        "nodeType": "ImportDirective",
        "scope": 2604,
        "sourceUnit": 2563,
        "src": "89:21:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2568,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2857,
              "src": "347:13:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$2857",
                "typeString": "contract Initializable"
              }
            },
            "id": 2569,
            "nodeType": "InheritanceSpecifier",
            "src": "347:13:15"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2570,
              "name": "Context",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2150,
              "src": "362:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Context_$2150",
                "typeString": "contract Context"
              }
            },
            "id": 2571,
            "nodeType": "InheritanceSpecifier",
            "src": "362:7:15"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2572,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2562,
              "src": "371:5:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$2562",
                "typeString": "contract ERC20"
              }
            },
            "id": 2573,
            "nodeType": "InheritanceSpecifier",
            "src": "371:5:15"
          }
        ],
        "contractDependencies": [
          2150,
          2562,
          2788,
          2857
        ],
        "contractKind": "contract",
        "documentation": "@dev Extension of {ERC20} that allows token holders to destroy both their own\ntokens and those that they have an allowance for, in a way that can be\nrecognized off-chain (via event analysis).",
        "fullyImplemented": true,
        "id": 2603,
        "linearizedBaseContracts": [
          2603,
          2562,
          2788,
          2150,
          2857
        ],
        "name": "ERC20Burnable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2584,
              "nodeType": "Block",
              "src": "523:44:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2579,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2138,
                          "src": "539:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 2580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "539:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2581,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2575,
                        "src": "553:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2578,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2486,
                      "src": "533:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "533:27:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2583,
                  "nodeType": "ExpressionStatement",
                  "src": "533:27:15"
                }
              ]
            },
            "documentation": "@dev Destroys `amount` tokens from the caller.\n     * See {ERC20-_burn}.",
            "id": 2585,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2575,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2585,
                  "src": "500:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2574,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "500:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "499:16:15"
            },
            "returnParameters": {
              "id": 2577,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "523:0:15"
            },
            "scope": 2603,
            "src": "486:81:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2597,
              "nodeType": "Block",
              "src": "682:43:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2593,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2587,
                        "src": "702:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2594,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2589,
                        "src": "711:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2592,
                      "name": "_burnFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2557,
                      "src": "692:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "692:26:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2596,
                  "nodeType": "ExpressionStatement",
                  "src": "692:26:15"
                }
              ]
            },
            "documentation": "@dev See {ERC20-_burnFrom}.",
            "id": 2598,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2587,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 2598,
                  "src": "642:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2586,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "642:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2589,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2598,
                  "src": "659:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2588,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "659:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "641:33:15"
            },
            "returnParameters": {
              "id": 2591,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "682:0:15"
            },
            "scope": 2603,
            "src": "624:101:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2602,
            "name": "______gap",
            "nodeType": "VariableDeclaration",
            "scope": 2603,
            "src": "731:29:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 2599,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "731:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 2601,
              "length": {
                "argumentTypes": null,
                "hexValue": "3530",
                "id": 2600,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "739:2:15",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": null,
                  "typeString": null
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "731:11:15",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 2604,
        "src": "321:442:15"
      }
    ],
    "src": "0:763:15"
  },
  "legacyAST": {
    "absolutePath": "/home/app/contracts/vendor/openzeppelin/ERC20Burnable.sol",
    "exportedSymbols": {
      "ERC20Burnable": [
        2603
      ]
    },
    "id": 2604,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2564,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:15"
      },
      {
        "absolutePath": "/home/app/contracts/vendor/openzeppelin/Initializable.sol",
        "file": "./Initializable.sol",
        "id": 2565,
        "nodeType": "ImportDirective",
        "scope": 2604,
        "sourceUnit": 2858,
        "src": "34:29:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/app/contracts/vendor/openzeppelin/Context.sol",
        "file": "./Context.sol",
        "id": 2566,
        "nodeType": "ImportDirective",
        "scope": 2604,
        "sourceUnit": 2151,
        "src": "65:23:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/app/contracts/vendor/openzeppelin/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 2567,
        "nodeType": "ImportDirective",
        "scope": 2604,
        "sourceUnit": 2563,
        "src": "89:21:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2568,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2857,
              "src": "347:13:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$2857",
                "typeString": "contract Initializable"
              }
            },
            "id": 2569,
            "nodeType": "InheritanceSpecifier",
            "src": "347:13:15"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2570,
              "name": "Context",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2150,
              "src": "362:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Context_$2150",
                "typeString": "contract Context"
              }
            },
            "id": 2571,
            "nodeType": "InheritanceSpecifier",
            "src": "362:7:15"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2572,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2562,
              "src": "371:5:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$2562",
                "typeString": "contract ERC20"
              }
            },
            "id": 2573,
            "nodeType": "InheritanceSpecifier",
            "src": "371:5:15"
          }
        ],
        "contractDependencies": [
          2150,
          2562,
          2788,
          2857
        ],
        "contractKind": "contract",
        "documentation": "@dev Extension of {ERC20} that allows token holders to destroy both their own\ntokens and those that they have an allowance for, in a way that can be\nrecognized off-chain (via event analysis).",
        "fullyImplemented": true,
        "id": 2603,
        "linearizedBaseContracts": [
          2603,
          2562,
          2788,
          2150,
          2857
        ],
        "name": "ERC20Burnable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2584,
              "nodeType": "Block",
              "src": "523:44:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2579,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2138,
                          "src": "539:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 2580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "539:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2581,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2575,
                        "src": "553:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2578,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2486,
                      "src": "533:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "533:27:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2583,
                  "nodeType": "ExpressionStatement",
                  "src": "533:27:15"
                }
              ]
            },
            "documentation": "@dev Destroys `amount` tokens from the caller.\n     * See {ERC20-_burn}.",
            "id": 2585,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2575,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2585,
                  "src": "500:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2574,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "500:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "499:16:15"
            },
            "returnParameters": {
              "id": 2577,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "523:0:15"
            },
            "scope": 2603,
            "src": "486:81:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2597,
              "nodeType": "Block",
              "src": "682:43:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2593,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2587,
                        "src": "702:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2594,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2589,
                        "src": "711:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2592,
                      "name": "_burnFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2557,
                      "src": "692:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "692:26:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2596,
                  "nodeType": "ExpressionStatement",
                  "src": "692:26:15"
                }
              ]
            },
            "documentation": "@dev See {ERC20-_burnFrom}.",
            "id": 2598,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2587,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 2598,
                  "src": "642:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2586,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "642:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2589,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2598,
                  "src": "659:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2588,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "659:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "641:33:15"
            },
            "returnParameters": {
              "id": 2591,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "682:0:15"
            },
            "scope": 2603,
            "src": "624:101:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2602,
            "name": "______gap",
            "nodeType": "VariableDeclaration",
            "scope": 2603,
            "src": "731:29:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 2599,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "731:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 2601,
              "length": {
                "argumentTypes": null,
                "hexValue": "3530",
                "id": 2600,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "739:2:15",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": null,
                  "typeString": null
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "731:11:15",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 2604,
        "src": "321:442:15"
      }
    ],
    "src": "0:763:15"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-05-24T17:03:31.282Z",
  "devdoc": {
    "details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Destroys `amount` tokens from the caller.     * See {ERC20-_burn}."
      },
      "burnFrom(address,uint256)": {
        "details": "See {ERC20-_burnFrom}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}